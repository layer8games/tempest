.TH "KillerPhysics::AnchoredSpring" 3 "Mon Apr 22 2019" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KillerPhysics::AnchoredSpring
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <AnchoredSpring\&.h>\fP
.PP
Inherits \fBKillerPhysics::ForceGenerator\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAnchoredSpring\fP (void)"
.br
.ti -1c
.RI "\fBAnchoredSpring\fP (const \fBKM::Point\fP &anchor, \fBreal\fP springConstant, \fBreal\fP restLength)"
.br
.ti -1c
.RI "\fB~AnchoredSpring\fP (void)"
.br
.ti -1c
.RI "void \fBv_UpdateForce\fP (shared_ptr< \fBParticle\fP > particle) final"
.br
.ti -1c
.RI "void \fBv_UpdateForce\fP (shared_ptr< \fBRigidBody\fP > body) final"
.br
.ti -1c
.RI "void \fBSetAnchor\fP (const \fBKM::Point\fP &anchor)"
.br
.ti -1c
.RI "void \fBSetSpringConstant\fP (\fBreal\fP constant)"
.br
.ti -1c
.RI "void \fBSetRestLength\fP (\fBreal\fP length)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBKM::Point\fP \fB_anchor\fP"
.br
.RI "The location of the anchor point of the spring\&. "
.ti -1c
.RI "\fBreal\fP \fB_springConstant\fP"
.br
.RI "Determines the 'stiffness' of the spring\&. The higher this value is, the more force the spring can make\&. "
.ti -1c
.RI "\fBreal\fP \fB_restLength\fP"
.br
.RI "Length of the spring at rest\&. When an object reaches this length, a force will be acted on it\&. "
.in -1c
.SH "Detailed Description"
.PP 
A spring-like force that is anchored to a specific point\&. This can act like a chain, or a rubber band like force\&.
.PP
It uses Hooks law to generate the amount of force based on the distance that the spring is extended\&.
.PP
The base equation is:
.PP
f = -k * delta * l
.PP
Where delta is the distance that the spring has been moved and k is what is known as the 'spring constant', a value that represents the 'stiffness' of the spring\&. For our terms, the equation will look like this:
.PP
f = -k(l - l^0)
.PP
Where l is the location of the end of the spring, and l^0 is the reseting position of the spring\&.
.PP
Since this is a Vector4 force, the Vector4 version of the law looks like this:
.PP
f = -l(|d| - l^0)^d
.PP
Where |d| is the magnitude or length of d, which is distance away from l^0 our spring now is, and ^d is a unit Vector4 version of d\&. Also:
.PP
d = xA - xB
.PP
Where xA is the position of the spring attached to our object, and xB is the end of the spring\&.
.PP
Usage:
.PP
The force generator cannot be re-used\&. For each unique spring-like force we need to have its own Spring like force\&. Each spring-like force is created with a pointer to the object at the other end of the spring, the length of the spring, and the spring constant\&. This then must be registered with a ForceRegistry*\&.
.PP
To set an Anchored Spring Force Generator, simple give it an object that cannot be moved\&. This can be enforced in the GameObject using physics or something\&. May need to be figured out later\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AnchoredSpring::AnchoredSpring (void)"
Sets all values to 1, with anchor at 0\&. 
.SS "AnchoredSpring::AnchoredSpring (const \fBKM::Point\fP & anchor, \fBreal\fP springConstant, \fBreal\fP restLength)"
Sets up the default values of the spring\&. 
.PP
\fBParameters:\fP
.RS 4
\fIanchor\fP is the location of the anchor point\&. 
.br
\fIspringConstant\fP is the 'stiffness' of the spring\&. 
.br
\fIrestLength\fP is the length of the spring\&. 
.RE
.PP

.SS "AnchoredSpring::~AnchoredSpring (void)"
No implementation\&. 
.SH "Member Function Documentation"
.PP 
.SS "void KillerPhysics::AnchoredSpring::SetAnchor (const \fBKM::Point\fP & anchor)\fC [inline]\fP"
Changes the location of the other end of the spring\&. 
.PP
\fBParameters:\fP
.RS 4
\fIend\fP is the new opposite end of the spring\&. 
.RE
.PP

.SS "void KillerPhysics::AnchoredSpring::SetRestLength (\fBreal\fP length)\fC [inline]\fP"
Changes the length of the invisible spring\&. 
.PP
\fBParameters:\fP
.RS 4
\fIlength\fP is the new value for the rest length\&. 
.RE
.PP

.SS "void KillerPhysics::AnchoredSpring::SetSpringConstant (\fBreal\fP constant)\fC [inline]\fP"
Changes the 'striffness' of the spring\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconstant\fP is the new value for the spring constant\&. 
.RE
.PP

.SS "void AnchoredSpring::v_UpdateForce (shared_ptr< \fBParticle\fP > particle)\fC [final]\fP, \fC [virtual]\fP"
Adds a force to a \fBParticle\fP in relation to the objects position and the anchor point\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparticle\fP is the object that will recieve the force\&. 
.RE
.PP

.PP
Implements \fBKillerPhysics::ForceGenerator\fP\&.
.SS "void AnchoredSpring::v_UpdateForce (shared_ptr< \fBRigidBody\fP > body)\fC [final]\fP, \fC [virtual]\fP"
Adds a force to a \fBRigidBody\fP in relation to the objects position and the anchor point\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbody\fP is the object that will recieve the force\&. 
.RE
.PP

.PP
Implements \fBKillerPhysics::ForceGenerator\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
