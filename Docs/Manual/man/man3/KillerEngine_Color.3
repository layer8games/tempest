.TH "KillerEngine::Color" 3 "Wed Jan 30 2019" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KillerEngine::Color
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Color\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBColor\fP (void)"
.br
.ti -1c
.RI "\fBColor\fP (F32 col)"
.br
.ti -1c
.RI "\fBColor\fP (F32 red, F32 green, F32 blue)"
.br
.ti -1c
.RI "\fBColor\fP (F32 red, F32 green, F32 blue, F32 alpha)"
.br
.ti -1c
.RI "\fBColor\fP (const \fBColor\fP &c)"
.br
.ti -1c
.RI "const F32 & \fBoperator[]\fP (int i) const"
.br
.ti -1c
.RI "F32 & \fBoperator[]\fP (int i)"
.br
.ti -1c
.RI "\fBColor\fP & \fBoperator=\fP (const \fBColor\fP &c)"
.br
.ti -1c
.RI "const F32 * \fBGetPointer\fP (void) const"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "F32 \fB_data\fP [4]"
.br
.in -1c
.SH "Detailed Description"
.PP 
A structure to hold basic colors for all Sprites to sent to OGL in order to render things
.PP
There will be 4 values per color so that it can be sent to a vec4 in OGL before it is used to actually control the colors of anything in the shader\&. This is stored in an array for convience of passing the whole array out when the time comes\&. 
.br
 Where values are set, they are required to be normalized, that is between 0\&.0f and 1\&.0f\&. This is because the colors need to be represented this for OpenGL\&. Asserts are used at compile time to make sure that this is true\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Color::Color (void)"
Default Constructor\&. Sets Red Green and Blue to 0\&.0f, and Alpha to 1\&.0f 
.SS "Color::Color (F32 col)\fC [explicit]\fP"
Single Value Constructor\&. Sets Red, Green and Blue to value\&. The value needs to be between 0\&.0f and 1\&.0f\&. Alpha is set to 1\&.0f by default\&. 
.PP
\fBParameters:\fP
.RS 4
\fIcol\fP F32: value used to set RGB values\&. 
.RE
.PP

.SS "Color::Color (F32 red, F32 green, F32 blue)"
Three value Constructor\&. Sets Red, Green and Blue accordingly\&. Values need to be between 0\&.0f and 1\&.0f\&. Alpha is set to 1\&.0f by default\&. 
.PP
\fBParameters:\fP
.RS 4
\fIred\fP F32: value for Red\&. 
.br
\fIgreen\fP F32: value for Green\&. 
.br
\fIblue\fP F32: value for Blue\&. 
.RE
.PP

.SS "Color::Color (F32 red, F32 green, F32 blue, F32 alpha)"
Four value Constructor\&. Sets Red, Green and Blue accordingly\&. Values need to be between 0\&.0f and 1\&.0f by default\&. 
.PP
\fBParameters:\fP
.RS 4
\fIred\fP F32: value for Red\&. 
.br
\fIgreen\fP F32: value for Green\&. 
.br
\fIblue\fP F32: value for Blue\&. 
.br
\fIalpha\fP F32: value for Alpha\&. 
.RE
.PP

.SS "Color::Color (const \fBColor\fP & c)"
Copy constructor\&. Calls Color::GetRed Color::GetGreen Color::GetBlue Color::GetAlpha to set values\&. 
.PP
\fBParameters:\fP
.RS 4
\fIc\fP = \fBColor\fP&: color to copy 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "const F32* KillerEngine::Color::GetPointer (void) const\fC [inline]\fP"
Creates and returns an array with the 4 color values in it as a pointer\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
