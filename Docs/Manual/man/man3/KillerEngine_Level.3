.TH "KillerEngine::Level" 3 "Sun Jan 13 2019" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KillerEngine::Level
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBLevelData\fP"
.br
.ti -1c
.RI "struct \fBTileData\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBv_InitLevel\fP (U32 id, S32 w, S32 h, \fBColor\fP &c)=0"
.br
.ti -1c
.RI "virtual void \fBv_Update\fP (void)=0"
.br
.ti -1c
.RI "virtual void \fBv_Integrate\fP (void)"
.br
.ti -1c
.RI "virtual void \fBv_Render\fP (void)"
.br
.ti -1c
.RI "virtual \fBGameObject\fP * \fBv_CreateObject\fP (ObjectType type, \fBKM::Vector\fP &pos, U32 textureID, F32 w, F32 h)"
.br
.ti -1c
.RI "void \fBUpdateLevel\fP (void)"
.br
.ti -1c
.RI "void \fBAddObjectToLevel\fP (const \fBGameObject\fP &obj)"
.br
.ti -1c
.RI "void \fBAddObjectToLevel\fP (shared_ptr< \fBGameObject\fP > obj)"
.br
.ti -1c
.RI "void \fBAddParticleToLevel\fP (const \fBKP::Particle\fP &particle)"
.br
.ti -1c
.RI "void \fBAddParticleToLevel\fP (shared_ptr< \fBKP::Particle\fP > particle)"
.br
.ti -1c
.RI "void \fBAddParticleToLevel\fP (shared_ptr< \fBKP::Particle\fP > particle, shared_ptr< \fBKP::ForceGenerator\fP > generator=nullptr)"
.br
.ti -1c
.RI "void \fBRegisterParticleForce\fP (shared_ptr< \fBKP::Particle\fP > particle, shared_ptr< \fBKP::ForceGenerator\fP > generator)"
.br
.ti -1c
.RI "void \fBAddTextToLevel\fP (const \fBText\fP &text)"
.br
.ti -1c
.RI "void \fBRemoveObjectFromLevel\fP (U32 id)"
.br
.ti -1c
.RI "void \fBUpdateObjects\fP (void)"
.br
.ti -1c
.RI "void \fBRenderObjects\fP (void)"
.br
.ti -1c
.RI "void \fBSetBackgroundColor\fP (\fBColor\fP &c)"
.br
.ti -1c
.RI "void \fBActivateBackgroundColor\fP (void)"
.br
.ti -1c
.RI "S32 \fBGetLevelWidth\fP (void) const"
.br
.ti -1c
.RI "S32 \fBGetLevelHeight\fP (void) const"
.br
.ti -1c
.RI "void \fBSetLevelWidth\fP (S32 w)"
.br
.ti -1c
.RI "void \fBSetLevelHeight\fP (S32 h)"
.br
.ti -1c
.RI "void \fBSetLevelDimensions\fP (S32 w, S32 h)"
.br
.ti -1c
.RI "void \fBSetTopBorder\fP (S32 top)"
.br
.ti -1c
.RI "void \fBSetBottomBorder\fP (S32 bottom)"
.br
.ti -1c
.RI "void \fBSetRightBorder\fP (S32 right)"
.br
.ti -1c
.RI "void \fBSetLeftBorder\fP (S32 left)"
.br
.ti -1c
.RI "void \fBSetLevelBorders\fP (S32 top, S32 bottom, S32 right, S32 left)"
.br
.ti -1c
.RI "S32 \fBGetTopBorder\fP (void) const"
.br
.ti -1c
.RI "S32 \fBGetBottomBorder\fP (void) const"
.br
.ti -1c
.RI "S32 \fBGetLeftBorder\fP (void) const"
.br
.ti -1c
.RI "S32 \fBGetRightBorder\fP (void) const"
.br
.ti -1c
.RI "void \fBSetID\fP (U32 id)"
.br
.ti -1c
.RI "U32 \fBGetID\fP (void) const"
.br
.ti -1c
.RI "void \fBSetCamera\fP (\fBCamera\fP *cam)"
.br
.ti -1c
.RI "const \fBCamera\fP * \fBGetCamera\fP (void)"
.br
.ti -1c
.RI "void \fBSetCameraOrthographic\fP (void)"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBObjectType\fP { \fBBACKGROUND\fP, \fBENVIRONMENT\fP, \fBPLAYER\fP, \fBENEMY\fP, \fBEND\fP }"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fB_AddTile\fP (\fBTileData\fP data)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "S32 \fB_mapWidth\fP"
.br
.ti -1c
.RI "S32 \fB_mapHeight\fP"
.br
.ti -1c
.RI "S32 \fB_mapTopBorder\fP"
.br
.ti -1c
.RI "S32 \fB_mapBottomBorder\fP"
.br
.ti -1c
.RI "S32 \fB_mapRightBorder\fP"
.br
.ti -1c
.RI "S32 \fB_mapLeftBorder\fP"
.br
.ti -1c
.RI "\fBColor\fP \fB_bgColor\fP"
.br
.ti -1c
.RI "U32 \fB_ID\fP"
.br
.ti -1c
.RI "\fBCamera\fP * \fB_camera\fP"
.br
.ti -1c
.RI "std::map< U32, shared_ptr< \fBGameObject\fP > > \fB_gameObjects\fP"
.br
.ti -1c
.RI "std::map< U32, shared_ptr< \fBKP::Particle\fP > > \fB_particles\fP"
.br
.ti -1c
.RI "std::map< U32, \fBTileData\fP > \fB_2DTileData\fP"
.br
.ti -1c
.RI "\fBKP::ForceRegistry\fP \fB_forceRegistry\fP"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
