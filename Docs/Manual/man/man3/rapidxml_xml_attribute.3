.TH "rapidxml::xml_attribute< Ch >" 3 "Thu Jan 10 2019" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
rapidxml::xml_attribute< Ch >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rapidxml\&.hpp>\fP
.PP
Inherits \fBrapidxml::xml_base< Ch >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBxml_attribute\fP ()"
.br
.ti -1c
.RI "\fBxml_document\fP< Ch > * \fBdocument\fP () const"
.br
.ti -1c
.RI "\fBxml_attribute\fP< Ch > * \fBprevious_attribute\fP (const Ch *\fBname\fP=0, std::size_t \fBname_size\fP=0, bool case_sensitive=true) const"
.br
.ti -1c
.RI "\fBxml_attribute\fP< Ch > * \fBnext_attribute\fP (const Ch *\fBname\fP=0, std::size_t \fBname_size\fP=0, bool case_sensitive=true) const"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBxml_attribute\fP< Ch > * \fBm_prev_attribute\fP"
.br
.ti -1c
.RI "\fBxml_attribute\fP< Ch > * \fBm_next_attribute\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBxml_node< Ch >\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 

.SS "template<class Ch = char>
.br
class rapidxml::xml_attribute< Ch >"
Class representing attribute node of XML document\&. Each attribute has name and value strings, which are available through \fBname()\fP and \fBvalue()\fP functions (inherited from \fBxml_base\fP)\&. Note that after parse, both name and value of attribute will point to interior of source text used for parsing\&. Thus, this text must persist in memory for the lifetime of attribute\&. 
.PP
\fBParameters:\fP
.RS 4
\fICh\fP Character type to use\&. 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class Ch = char> \fBrapidxml::xml_attribute\fP< Ch >::\fBxml_attribute\fP ()\fC [inline]\fP"
Constructs an empty attribute with the specified type\&. Consider using \fBmemory_pool\fP of appropriate \fBxml_document\fP if allocating attributes manually\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<class Ch = char> \fBxml_document\fP<Ch>* \fBrapidxml::xml_attribute\fP< Ch >::document () const\fC [inline]\fP"
Gets document of which attribute is a child\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to document that contains this attribute, or 0 if there is no parent document\&. 
.RE
.PP

.SS "template<class Ch = char> \fBxml_attribute\fP<Ch>* \fBrapidxml::xml_attribute\fP< Ch >::next_attribute (const Ch * name = \fC0\fP, std::size_t name_size = \fC0\fP, bool case_sensitive = \fCtrue\fP) const\fC [inline]\fP"
Gets next attribute, optionally matching attribute name\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of attribute to find, or 0 to return next attribute regardless of its name; this string doesn't have to be zero-terminated if name_size is non-zero 
.br
\fIname_size\fP Size of name, in characters, or 0 to have size calculated automatically from string 
.br
\fIcase_sensitive\fP Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters 
.RE
.PP
\fBReturns:\fP
.RS 4
Pointer to found attribute, or 0 if not found\&. 
.RE
.PP

.SS "template<class Ch = char> \fBxml_attribute\fP<Ch>* \fBrapidxml::xml_attribute\fP< Ch >::previous_attribute (const Ch * name = \fC0\fP, std::size_t name_size = \fC0\fP, bool case_sensitive = \fCtrue\fP) const\fC [inline]\fP"
Gets previous attribute, optionally matching attribute name\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of attribute to find, or 0 to return previous attribute regardless of its name; this string doesn't have to be zero-terminated if name_size is non-zero 
.br
\fIname_size\fP Size of name, in characters, or 0 to have size calculated automatically from string 
.br
\fIcase_sensitive\fP Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters 
.RE
.PP
\fBReturns:\fP
.RS 4
Pointer to found attribute, or 0 if not found\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
