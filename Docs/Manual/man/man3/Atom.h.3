.TH "F:/Projects/Killer_Engine/Headers/Engine/Atom.h" 3 "Wed Jun 6 2018" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F:/Projects/Killer_Engine/Headers/Engine/Atom.h
.SH SYNOPSIS
.br
.PP
\fC#include <Windows\&.h>\fP
.br
\fC#include <GL/gl3w\&.h>\fP
.br
\fC#include <string>\fP
.br
\fC#include <memory>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDOUBLE_PRECISION\fP"
.br
.ti -1c
.RI "#define \fBREAL_MAX\fP   FLT_MAX"
.br
.ti -1c
.RI "#define \fBreal_sqrt\fP   sqrt"
.br
.ti -1c
.RI "#define \fBreal_abs\fP   fabsf"
.br
.ti -1c
.RI "#define \fBreal_sin\fP   sin"
.br
.ti -1c
.RI "#define \fBreal_cos\fP   cos"
.br
.ti -1c
.RI "#define \fBreal_exp\fP   exp"
.br
.ti -1c
.RI "#define \fBreal_pow\fP   pow"
.br
.ti -1c
.RI "#define \fBreal_fmod\fP   fmod"
.br
.ti -1c
.RI "#define \fBreal_epsilon\fP   DBL_EPSILON"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef int8_t \fBS8\fP"
.br
.ti -1c
.RI "typedef int16_t \fBS16\fP"
.br
.ti -1c
.RI "typedef int32_t \fBS32\fP"
.br
.ti -1c
.RI "typedef int64_t \fBS64\fP"
.br
.ti -1c
.RI "typedef uint8_t \fBU8\fP"
.br
.ti -1c
.RI "typedef uint16_t \fBU16\fP"
.br
.ti -1c
.RI "typedef uint32_t \fBU32\fP"
.br
.ti -1c
.RI "typedef uint64_t \fBU64\fP"
.br
.ti -1c
.RI "typedef float \fBF32\fP"
.br
.ti -1c
.RI "typedef double \fBF64\fP"
.br
.ti -1c
.RI "typedef float \fBreal\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBreal\fP \fBRealSqr\fP (\fBreal\fP \fBx\fP)"
.br
.ti -1c
.RI "\fBF32\fP \fBDegreeToRadian\fP (\fBF32\fP angle)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const \fBreal\fP \fBR_PI\fP = static_cast<\fBreal\fP>(3\&.14159265358979)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define DOUBLE_PRECISION"

.SS "#define real_abs   fabsf"

.SS "#define real_cos   cos"

.SS "#define real_epsilon   DBL_EPSILON"

.SS "#define real_exp   exp"

.SS "#define real_fmod   fmod"

.SS "#define REAL_MAX   FLT_MAX"

.SS "#define real_pow   pow"

.SS "#define real_sin   sin"

.SS "#define real_sqrt   sqrt"

.SH "Typedef Documentation"
.PP 
.SS "typedef float \fBF32\fP"

.SS "typedef double \fBF64\fP"

.SS "typedef float \fBreal\fP"

.SS "typedef int16_t \fBS16\fP"

.SS "typedef int32_t \fBS32\fP"

.SS "typedef int64_t \fBS64\fP"

.SS "typedef int8_t \fBS8\fP"

.SS "typedef uint16_t \fBU16\fP"

.SS "typedef uint32_t \fBU32\fP"

.SS "typedef uint64_t \fBU64\fP"

.SS "typedef uint8_t \fBU8\fP"

.SH "Function Documentation"
.PP 
.SS "\fBF32\fP DegreeToRadian (\fBF32\fP angle)\fC [inline]\fP"

.SS "\fBreal\fP RealSqr (\fBreal\fP x)\fC [inline]\fP"

.SH "Variable Documentation"
.PP 
.SS "const \fBreal\fP R_PI = static_cast<\fBreal\fP>(3\&.14159265358979)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
