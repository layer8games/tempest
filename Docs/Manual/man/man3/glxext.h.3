.TH "F:/Projects/Killer_Engine/Headers/GL/glxext.h" 3 "Wed Jun 6 2018" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
F:/Projects/Killer_Engine/Headers/GL/glxext.h
.SH SYNOPSIS
.br
.PP
\fC#include <inttypes\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBGLXStereoNotifyEventEXT\fP"
.br
.ti -1c
.RI "struct \fBGLXHyperpipeNetworkSGIX\fP"
.br
.ti -1c
.RI "struct \fBGLXHyperpipeConfigSGIX\fP"
.br
.ti -1c
.RI "struct \fBGLXPipeRect\fP"
.br
.ti -1c
.RI "struct \fBGLXPipeRectLimits\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGLX_GLXEXT_VERSION\fP   20140918"
.br
.ti -1c
.RI "#define \fBGLX_VERSION_1_3\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_PIXMAP_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_BIT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_CLOBBER_MASK\fP   0x08000000"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_LEFT_BUFFER_BIT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_RIGHT_BUFFER_BIT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_BACK_LEFT_BUFFER_BIT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_BACK_RIGHT_BUFFER_BIT\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBGLX_AUX_BUFFERS_BIT\fP   0x00000010"
.br
.ti -1c
.RI "#define \fBGLX_DEPTH_BUFFER_BIT\fP   0x00000020"
.br
.ti -1c
.RI "#define \fBGLX_STENCIL_BUFFER_BIT\fP   0x00000040"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_BUFFER_BIT\fP   0x00000080"
.br
.ti -1c
.RI "#define \fBGLX_CONFIG_CAVEAT\fP   0x20"
.br
.ti -1c
.RI "#define \fBGLX_X_VISUAL_TYPE\fP   0x22"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_TYPE\fP   0x23"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX_VALUE\fP   0x24"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RED_VALUE\fP   0x25"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_GREEN_VALUE\fP   0x26"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_BLUE_VALUE\fP   0x27"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_ALPHA_VALUE\fP   0x28"
.br
.ti -1c
.RI "#define \fBGLX_DONT_CARE\fP   0xFFFFFFFF"
.br
.ti -1c
.RI "#define \fBGLX_NONE\fP   0x8000"
.br
.ti -1c
.RI "#define \fBGLX_SLOW_CONFIG\fP   0x8001"
.br
.ti -1c
.RI "#define \fBGLX_TRUE_COLOR\fP   0x8002"
.br
.ti -1c
.RI "#define \fBGLX_DIRECT_COLOR\fP   0x8003"
.br
.ti -1c
.RI "#define \fBGLX_PSEUDO_COLOR\fP   0x8004"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_COLOR\fP   0x8005"
.br
.ti -1c
.RI "#define \fBGLX_GRAY_SCALE\fP   0x8006"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_GRAY\fP   0x8007"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RGB\fP   0x8008"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX\fP   0x8009"
.br
.ti -1c
.RI "#define \fBGLX_VISUAL_ID\fP   0x800B"
.br
.ti -1c
.RI "#define \fBGLX_SCREEN\fP   0x800C"
.br
.ti -1c
.RI "#define \fBGLX_NON_CONFORMANT_CONFIG\fP   0x800D"
.br
.ti -1c
.RI "#define \fBGLX_DRAWABLE_TYPE\fP   0x8010"
.br
.ti -1c
.RI "#define \fBGLX_RENDER_TYPE\fP   0x8011"
.br
.ti -1c
.RI "#define \fBGLX_X_RENDERABLE\fP   0x8012"
.br
.ti -1c
.RI "#define \fBGLX_FBCONFIG_ID\fP   0x8013"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_TYPE\fP   0x8014"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_TYPE\fP   0x8015"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_WIDTH\fP   0x8016"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_HEIGHT\fP   0x8017"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_PIXELS\fP   0x8018"
.br
.ti -1c
.RI "#define \fBGLX_PRESERVED_CONTENTS\fP   0x801B"
.br
.ti -1c
.RI "#define \fBGLX_LARGEST_PBUFFER\fP   0x801C"
.br
.ti -1c
.RI "#define \fBGLX_WIDTH\fP   0x801D"
.br
.ti -1c
.RI "#define \fBGLX_HEIGHT\fP   0x801E"
.br
.ti -1c
.RI "#define \fBGLX_EVENT_MASK\fP   0x801F"
.br
.ti -1c
.RI "#define \fBGLX_DAMAGED\fP   0x8020"
.br
.ti -1c
.RI "#define \fBGLX_SAVED\fP   0x8021"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW\fP   0x8022"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER\fP   0x8023"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_HEIGHT\fP   0x8040"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_WIDTH\fP   0x8041"
.br
.ti -1c
.RI "#define \fBGLX_VERSION_1_4\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS\fP   100000"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLES\fP   100001"
.br
.ti -1c
.RI "#define \fBGLX_ARB_context_flush_control\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_RELEASE_BEHAVIOR_ARB\fP   0x2097"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB\fP   0"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB\fP   0x2098"
.br
.ti -1c
.RI "#define \fBGLX_ARB_create_context\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_DEBUG_BIT_ARB\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_MAJOR_VERSION_ARB\fP   0x2091"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_MINOR_VERSION_ARB\fP   0x2092"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_FLAGS_ARB\fP   0x2094"
.br
.ti -1c
.RI "#define \fBGLX_ARB_create_context_profile\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_CORE_PROFILE_BIT_ARB\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_PROFILE_MASK_ARB\fP   0x9126"
.br
.ti -1c
.RI "#define \fBGLX_ARB_create_context_robustness\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_ROBUST_ACCESS_BIT_ARB\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_LOSE_CONTEXT_ON_RESET_ARB\fP   0x8252"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB\fP   0x8256"
.br
.ti -1c
.RI "#define \fBGLX_NO_RESET_NOTIFICATION_ARB\fP   0x8261"
.br
.ti -1c
.RI "#define \fBGLX_ARB_fbconfig_float\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_FLOAT_TYPE_ARB\fP   0x20B9"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_FLOAT_BIT_ARB\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_ARB_framebuffer_sRGB\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_FRAMEBUFFER_SRGB_CAPABLE_ARB\fP   0x20B2"
.br
.ti -1c
.RI "#define \fBGLX_ARB_get_proc_address\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_ARB_multisample\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS_ARB\fP   100000"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLES_ARB\fP   100001"
.br
.ti -1c
.RI "#define \fBGLX_ARB_robustness_application_isolation\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_RESET_ISOLATION_BIT_ARB\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBGLX_ARB_robustness_share_group_isolation\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_ARB_vertex_buffer_object\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB\fP   0x2095"
.br
.ti -1c
.RI "#define \fBGLX_3DFX_multisample\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS_3DFX\fP   0x8050"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLES_3DFX\fP   0x8051"
.br
.ti -1c
.RI "#define \fBGLX_AMD_gpu_association\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_GPU_VENDOR_AMD\fP   0x1F00"
.br
.ti -1c
.RI "#define \fBGLX_GPU_RENDERER_STRING_AMD\fP   0x1F01"
.br
.ti -1c
.RI "#define \fBGLX_GPU_OPENGL_VERSION_STRING_AMD\fP   0x1F02"
.br
.ti -1c
.RI "#define \fBGLX_GPU_FASTEST_TARGET_GPUS_AMD\fP   0x21A2"
.br
.ti -1c
.RI "#define \fBGLX_GPU_RAM_AMD\fP   0x21A3"
.br
.ti -1c
.RI "#define \fBGLX_GPU_CLOCK_AMD\fP   0x21A4"
.br
.ti -1c
.RI "#define \fBGLX_GPU_NUM_PIPES_AMD\fP   0x21A5"
.br
.ti -1c
.RI "#define \fBGLX_GPU_NUM_SIMD_AMD\fP   0x21A6"
.br
.ti -1c
.RI "#define \fBGLX_GPU_NUM_RB_AMD\fP   0x21A7"
.br
.ti -1c
.RI "#define \fBGLX_GPU_NUM_SPI_AMD\fP   0x21A8"
.br
.ti -1c
.RI "#define \fBGLX_EXT_buffer_age\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BACK_BUFFER_AGE_EXT\fP   0x20F4"
.br
.ti -1c
.RI "#define \fBGLX_EXT_create_context_es2_profile\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_ES2_PROFILE_BIT_EXT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_EXT_create_context_es_profile\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_CONTEXT_ES_PROFILE_BIT_EXT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_EXT_fbconfig_packed_float\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT\fP   0x20B1"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_UNSIGNED_FLOAT_BIT_EXT\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBGLX_EXT_framebuffer_sRGB\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_FRAMEBUFFER_SRGB_CAPABLE_EXT\fP   0x20B2"
.br
.ti -1c
.RI "#define \fBGLX_EXT_import_context\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SHARE_CONTEXT_EXT\fP   0x800A"
.br
.ti -1c
.RI "#define \fBGLX_VISUAL_ID_EXT\fP   0x800B"
.br
.ti -1c
.RI "#define \fBGLX_SCREEN_EXT\fP   0x800C"
.br
.ti -1c
.RI "#define \fBGLX_EXT_stereo_tree\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_STEREO_TREE_EXT\fP   0x20F5"
.br
.ti -1c
.RI "#define \fBGLX_STEREO_NOTIFY_MASK_EXT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_STEREO_NOTIFY_EXT\fP   0x00000000"
.br
.ti -1c
.RI "#define \fBGLX_EXT_swap_control\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SWAP_INTERVAL_EXT\fP   0x20F1"
.br
.ti -1c
.RI "#define \fBGLX_MAX_SWAP_INTERVAL_EXT\fP   0x20F2"
.br
.ti -1c
.RI "#define \fBGLX_EXT_swap_control_tear\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_LATE_SWAPS_TEAR_EXT\fP   0x20F3"
.br
.ti -1c
.RI "#define \fBGLX_EXT_texture_from_pixmap\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_1D_BIT_EXT\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_2D_BIT_EXT\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_RECTANGLE_BIT_EXT\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_RGB_EXT\fP   0x20D0"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_RGBA_EXT\fP   0x20D1"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_MIPMAP_TEXTURE_EXT\fP   0x20D2"
.br
.ti -1c
.RI "#define \fBGLX_BIND_TO_TEXTURE_TARGETS_EXT\fP   0x20D3"
.br
.ti -1c
.RI "#define \fBGLX_Y_INVERTED_EXT\fP   0x20D4"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_EXT\fP   0x20D5"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_TARGET_EXT\fP   0x20D6"
.br
.ti -1c
.RI "#define \fBGLX_MIPMAP_TEXTURE_EXT\fP   0x20D7"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_NONE_EXT\fP   0x20D8"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_RGB_EXT\fP   0x20D9"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_FORMAT_RGBA_EXT\fP   0x20DA"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_1D_EXT\fP   0x20DB"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_2D_EXT\fP   0x20DC"
.br
.ti -1c
.RI "#define \fBGLX_TEXTURE_RECTANGLE_EXT\fP   0x20DD"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_LEFT_EXT\fP   0x20DE"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_RIGHT_EXT\fP   0x20DF"
.br
.ti -1c
.RI "#define \fBGLX_BACK_LEFT_EXT\fP   0x20E0"
.br
.ti -1c
.RI "#define \fBGLX_BACK_RIGHT_EXT\fP   0x20E1"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_EXT\fP   0x20DE"
.br
.ti -1c
.RI "#define \fBGLX_BACK_EXT\fP   0x20E0"
.br
.ti -1c
.RI "#define \fBGLX_AUX0_EXT\fP   0x20E2"
.br
.ti -1c
.RI "#define \fBGLX_AUX1_EXT\fP   0x20E3"
.br
.ti -1c
.RI "#define \fBGLX_AUX2_EXT\fP   0x20E4"
.br
.ti -1c
.RI "#define \fBGLX_AUX3_EXT\fP   0x20E5"
.br
.ti -1c
.RI "#define \fBGLX_AUX4_EXT\fP   0x20E6"
.br
.ti -1c
.RI "#define \fBGLX_AUX5_EXT\fP   0x20E7"
.br
.ti -1c
.RI "#define \fBGLX_AUX6_EXT\fP   0x20E8"
.br
.ti -1c
.RI "#define \fBGLX_AUX7_EXT\fP   0x20E9"
.br
.ti -1c
.RI "#define \fBGLX_AUX8_EXT\fP   0x20EA"
.br
.ti -1c
.RI "#define \fBGLX_AUX9_EXT\fP   0x20EB"
.br
.ti -1c
.RI "#define \fBGLX_EXT_visual_info\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_X_VISUAL_TYPE_EXT\fP   0x22"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_TYPE_EXT\fP   0x23"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX_VALUE_EXT\fP   0x24"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RED_VALUE_EXT\fP   0x25"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_GREEN_VALUE_EXT\fP   0x26"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_BLUE_VALUE_EXT\fP   0x27"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_ALPHA_VALUE_EXT\fP   0x28"
.br
.ti -1c
.RI "#define \fBGLX_NONE_EXT\fP   0x8000"
.br
.ti -1c
.RI "#define \fBGLX_TRUE_COLOR_EXT\fP   0x8002"
.br
.ti -1c
.RI "#define \fBGLX_DIRECT_COLOR_EXT\fP   0x8003"
.br
.ti -1c
.RI "#define \fBGLX_PSEUDO_COLOR_EXT\fP   0x8004"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_COLOR_EXT\fP   0x8005"
.br
.ti -1c
.RI "#define \fBGLX_GRAY_SCALE_EXT\fP   0x8006"
.br
.ti -1c
.RI "#define \fBGLX_STATIC_GRAY_EXT\fP   0x8007"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_RGB_EXT\fP   0x8008"
.br
.ti -1c
.RI "#define \fBGLX_TRANSPARENT_INDEX_EXT\fP   0x8009"
.br
.ti -1c
.RI "#define \fBGLX_EXT_visual_rating\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VISUAL_CAVEAT_EXT\fP   0x20"
.br
.ti -1c
.RI "#define \fBGLX_SLOW_VISUAL_EXT\fP   0x8001"
.br
.ti -1c
.RI "#define \fBGLX_NON_CONFORMANT_VISUAL_EXT\fP   0x800D"
.br
.ti -1c
.RI "#define \fBGLX_INTEL_swap_event\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BUFFER_SWAP_COMPLETE_INTEL_MASK\fP   0x04000000"
.br
.ti -1c
.RI "#define \fBGLX_EXCHANGE_COMPLETE_INTEL\fP   0x8180"
.br
.ti -1c
.RI "#define \fBGLX_COPY_COMPLETE_INTEL\fP   0x8181"
.br
.ti -1c
.RI "#define \fBGLX_FLIP_COMPLETE_INTEL\fP   0x8182"
.br
.ti -1c
.RI "#define \fBGLX_MESA_agp_offset\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MESA_copy_sub_buffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MESA_pixmap_colormap\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MESA_query_renderer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_VENDOR_ID_MESA\fP   0x8183"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_DEVICE_ID_MESA\fP   0x8184"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_VERSION_MESA\fP   0x8185"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_ACCELERATED_MESA\fP   0x8186"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_VIDEO_MEMORY_MESA\fP   0x8187"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA\fP   0x8188"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_PREFERRED_PROFILE_MESA\fP   0x8189"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA\fP   0x818A"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA\fP   0x818B"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA\fP   0x818C"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA\fP   0x818D"
.br
.ti -1c
.RI "#define \fBGLX_RENDERER_ID_MESA\fP   0x818E"
.br
.ti -1c
.RI "#define \fBGLX_MESA_release_buffers\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MESA_set_3dfx_mode\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_3DFX_WINDOW_MODE_MESA\fP   0x1"
.br
.ti -1c
.RI "#define \fBGLX_3DFX_FULLSCREEN_MODE_MESA\fP   0x2"
.br
.ti -1c
.RI "#define \fBGLX_NV_copy_buffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_copy_image\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_delay_before_swap\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_float_buffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_FLOAT_COMPONENTS_NV\fP   0x20B0"
.br
.ti -1c
.RI "#define \fBGLX_NV_multisample_coverage\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_COVERAGE_SAMPLES_NV\fP   100001"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_SAMPLES_NV\fP   0x20B3"
.br
.ti -1c
.RI "#define \fBGLX_NV_present_video\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NUM_VIDEO_SLOTS_NV\fP   0x20F0"
.br
.ti -1c
.RI "#define \fBGLX_NV_swap_group\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_NV_video_capture\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_DEVICE_ID_NV\fP   0x20CD"
.br
.ti -1c
.RI "#define \fBGLX_UNIQUE_ID_NV\fP   0x20CE"
.br
.ti -1c
.RI "#define \fBGLX_NUM_VIDEO_CAPTURE_SLOTS_NV\fP   0x20CF"
.br
.ti -1c
.RI "#define \fBGLX_NV_video_out\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_COLOR_NV\fP   0x20C3"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_ALPHA_NV\fP   0x20C4"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_DEPTH_NV\fP   0x20C5"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_COLOR_AND_ALPHA_NV\fP   0x20C6"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_COLOR_AND_DEPTH_NV\fP   0x20C7"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_FRAME_NV\fP   0x20C8"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_FIELD_1_NV\fP   0x20C9"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_FIELD_2_NV\fP   0x20CA"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV\fP   0x20CB"
.br
.ti -1c
.RI "#define \fBGLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV\fP   0x20CC"
.br
.ti -1c
.RI "#define \fBGLX_OML_swap_method\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SWAP_METHOD_OML\fP   0x8060"
.br
.ti -1c
.RI "#define \fBGLX_SWAP_EXCHANGE_OML\fP   0x8061"
.br
.ti -1c
.RI "#define \fBGLX_SWAP_COPY_OML\fP   0x8062"
.br
.ti -1c
.RI "#define \fBGLX_SWAP_UNDEFINED_OML\fP   0x8063"
.br
.ti -1c
.RI "#define \fBGLX_OML_sync_control\fP   1"
.br
.ti -1c
.RI "#define \fBGLEXT_64_TYPES_DEFINED\fP"
.br
.ti -1c
.RI "#define \fBGLX_SGIS_blended_overlay\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_BLENDED_RGBA_SGIS\fP   0x8025"
.br
.ti -1c
.RI "#define \fBGLX_SGIS_multisample\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS_SGIS\fP   100000"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLES_SGIS\fP   100001"
.br
.ti -1c
.RI "#define \fBGLX_SGIS_shared_multisample\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS\fP   0x8026"
.br
.ti -1c
.RI "#define \fBGLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS\fP   0x8027"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_dmbuffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_fbconfig\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW_BIT_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_PIXMAP_BIT_SGIX\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_BIT_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_BIT_SGIX\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_DRAWABLE_TYPE_SGIX\fP   0x8010"
.br
.ti -1c
.RI "#define \fBGLX_RENDER_TYPE_SGIX\fP   0x8011"
.br
.ti -1c
.RI "#define \fBGLX_X_RENDERABLE_SGIX\fP   0x8012"
.br
.ti -1c
.RI "#define \fBGLX_FBCONFIG_ID_SGIX\fP   0x8013"
.br
.ti -1c
.RI "#define \fBGLX_RGBA_TYPE_SGIX\fP   0x8014"
.br
.ti -1c
.RI "#define \fBGLX_COLOR_INDEX_TYPE_SGIX\fP   0x8015"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_hyperpipe\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX\fP   80"
.br
.ti -1c
.RI "#define \fBGLX_BAD_HYPERPIPE_CONFIG_SGIX\fP   91"
.br
.ti -1c
.RI "#define \fBGLX_BAD_HYPERPIPE_SGIX\fP   92"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_DISPLAY_PIPE_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_RENDER_PIPE_SGIX\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_PIPE_RECT_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_PIPE_RECT_LIMITS_SGIX\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_STEREO_SGIX\fP   0x00000003"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_PIXEL_AVERAGE_SGIX\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_HYPERPIPE_ID_SGIX\fP   0x8030"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_pbuffer\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_BIT_SGIX\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_BUFFER_CLOBBER_MASK_SGIX\fP   0x08000000"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_LEFT_BUFFER_BIT_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_FRONT_RIGHT_BUFFER_BIT_SGIX\fP   0x00000002"
.br
.ti -1c
.RI "#define \fBGLX_BACK_LEFT_BUFFER_BIT_SGIX\fP   0x00000004"
.br
.ti -1c
.RI "#define \fBGLX_BACK_RIGHT_BUFFER_BIT_SGIX\fP   0x00000008"
.br
.ti -1c
.RI "#define \fBGLX_AUX_BUFFERS_BIT_SGIX\fP   0x00000010"
.br
.ti -1c
.RI "#define \fBGLX_DEPTH_BUFFER_BIT_SGIX\fP   0x00000020"
.br
.ti -1c
.RI "#define \fBGLX_STENCIL_BUFFER_BIT_SGIX\fP   0x00000040"
.br
.ti -1c
.RI "#define \fBGLX_ACCUM_BUFFER_BIT_SGIX\fP   0x00000080"
.br
.ti -1c
.RI "#define \fBGLX_SAMPLE_BUFFERS_BIT_SGIX\fP   0x00000100"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_WIDTH_SGIX\fP   0x8016"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_HEIGHT_SGIX\fP   0x8017"
.br
.ti -1c
.RI "#define \fBGLX_MAX_PBUFFER_PIXELS_SGIX\fP   0x8018"
.br
.ti -1c
.RI "#define \fBGLX_OPTIMAL_PBUFFER_WIDTH_SGIX\fP   0x8019"
.br
.ti -1c
.RI "#define \fBGLX_OPTIMAL_PBUFFER_HEIGHT_SGIX\fP   0x801A"
.br
.ti -1c
.RI "#define \fBGLX_PRESERVED_CONTENTS_SGIX\fP   0x801B"
.br
.ti -1c
.RI "#define \fBGLX_LARGEST_PBUFFER_SGIX\fP   0x801C"
.br
.ti -1c
.RI "#define \fBGLX_WIDTH_SGIX\fP   0x801D"
.br
.ti -1c
.RI "#define \fBGLX_HEIGHT_SGIX\fP   0x801E"
.br
.ti -1c
.RI "#define \fBGLX_EVENT_MASK_SGIX\fP   0x801F"
.br
.ti -1c
.RI "#define \fBGLX_DAMAGED_SGIX\fP   0x8020"
.br
.ti -1c
.RI "#define \fBGLX_SAVED_SGIX\fP   0x8021"
.br
.ti -1c
.RI "#define \fBGLX_WINDOW_SGIX\fP   0x8022"
.br
.ti -1c
.RI "#define \fBGLX_PBUFFER_SGIX\fP   0x8023"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_swap_barrier\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_swap_group\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_video_resize\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SYNC_FRAME_SGIX\fP   0x00000000"
.br
.ti -1c
.RI "#define \fBGLX_SYNC_SWAP_SGIX\fP   0x00000001"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_video_source\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGIX_visual_select_group\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_VISUAL_SELECT_GROUP_SGIX\fP   0x8028"
.br
.ti -1c
.RI "#define \fBGLX_SGI_cushion\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGI_make_current_read\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGI_swap_control\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SGI_video_sync\fP   1"
.br
.ti -1c
.RI "#define \fBGLX_SUN_get_transparent_index\fP   1"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef XID \fBGLXContextID\fP"
.br
.ti -1c
.RI "typedef struct __GLXFBConfigRec * \fBGLXFBConfig\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXWindow\fP"
.br
.ti -1c
.RI "typedef XID \fBGLXPbuffer\fP"
.br
.ti -1c
.RI "typedef \fBGLXFBConfig\fP *(* \fBPFNGLXGETFBCONFIGSPROC\fP) (Display *dpy, int screen, int *nelements)"
.br
.ti -1c
.RI "typedef \fBGLXFBConfig\fP *(* \fBPFNGLXCHOOSEFBCONFIGPROC\fP) (Display *dpy, int screen, const int *attrib_list, int *nelements)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETFBCONFIGATTRIBPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef XVisualInfo *(* \fBPFNGLXGETVISUALFROMFBCONFIGPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config)"
.br
.ti -1c
.RI "typedef \fBGLXWindow\fP(* \fBPFNGLXCREATEWINDOWPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, Window win, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYWINDOWPROC\fP) (Display *dpy, \fBGLXWindow\fP win)"
.br
.ti -1c
.RI "typedef GLXPixmap(* \fBPFNGLXCREATEPIXMAPPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, Pixmap pixmap, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYPIXMAPPROC\fP) (Display *dpy, GLXPixmap pixmap)"
.br
.ti -1c
.RI "typedef \fBGLXPbuffer\fP(* \fBPFNGLXCREATEPBUFFERPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYPBUFFERPROC\fP) (Display *dpy, \fBGLXPbuffer\fP pbuf)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXQUERYDRAWABLEPROC\fP) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXCREATENEWCONTEXTPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, int render_type, GLXContext share_list, Bool direct)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXMAKECONTEXTCURRENTPROC\fP) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
.br
.ti -1c
.RI "typedef GLXDrawable(* \fBPFNGLXGETCURRENTREADDRAWABLEPROC\fP) (\fBvoid\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYCONTEXTPROC\fP) (Display *dpy, GLXContext ctx, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXSELECTEVENTPROC\fP) (Display *dpy, GLXDrawable draw, unsigned long event_mask)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXGETSELECTEDEVENTPROC\fP) (Display *dpy, GLXDrawable draw, unsigned long *event_mask)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fB__GLXextFuncPtr\fP) (\fBvoid\fP)"
.br
.ti -1c
.RI "typedef \fB__GLXextFuncPtr\fP(* \fBPFNGLXGETPROCADDRESSPROC\fP) (const \fBGLubyte\fP *procName)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXCREATECONTEXTATTRIBSARBPROC\fP) (Display *dpy, \fBGLXFBConfig\fP config, GLXContext share_context, Bool direct, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fB__GLXextFuncPtr\fP(* \fBPFNGLXGETPROCADDRESSARBPROC\fP) (const \fBGLubyte\fP *procName)"
.br
.ti -1c
.RI "typedef unsigned int(* \fBPFNGLXGETGPUIDSAMDPROC\fP) (unsigned int \fBmaxCount\fP, unsigned int *\fBids\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETGPUINFOAMDPROC\fP) (unsigned int \fBid\fP, int property, \fBGLenum\fP dataType, unsigned int \fBsize\fP, \fBvoid\fP *\fBdata\fP)"
.br
.ti -1c
.RI "typedef unsigned int(* \fBPFNGLXGETCONTEXTGPUIDAMDPROC\fP) (GLXContext ctx)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXCREATEASSOCIATEDCONTEXTAMDPROC\fP) (unsigned int \fBid\fP, GLXContext share_list)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC\fP) (unsigned int \fBid\fP, GLXContext share_context, const int *attribList)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXDELETEASSOCIATEDCONTEXTAMDPROC\fP) (GLXContext ctx)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC\fP) (GLXContext ctx)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC\fP) (\fBvoid\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC\fP) (GLXContext dstCtx, \fBGLint\fP \fBsrcX0\fP, \fBGLint\fP \fBsrcY0\fP, \fBGLint\fP \fBsrcX1\fP, \fBGLint\fP \fBsrcY1\fP, \fBGLint\fP \fBdstX0\fP, \fBGLint\fP \fBdstY0\fP, \fBGLint\fP \fBdstX1\fP, \fBGLint\fP \fBdstY1\fP, \fBGLbitfield\fP \fBmask\fP, \fBGLenum\fP \fBfilter\fP)"
.br
.ti -1c
.RI "typedef Display *(* \fBPFNGLXGETCURRENTDISPLAYEXTPROC\fP) (\fBvoid\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYCONTEXTINFOEXTPROC\fP) (Display *dpy, GLXContext context, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBGLXContextID\fP(* \fBPFNGLXGETCONTEXTIDEXTPROC\fP) (const GLXContext context)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXIMPORTCONTEXTEXTPROC\fP) (Display *dpy, \fBGLXContextID\fP contextID)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXFREECONTEXTEXTPROC\fP) (Display *dpy, GLXContext context)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXSWAPINTERVALEXTPROC\fP) (Display *dpy, GLXDrawable drawable, int interval)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXBINDTEXIMAGEEXTPROC\fP) (Display *dpy, GLXDrawable drawable, int \fBbuffer\fP, const int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXRELEASETEXIMAGEEXTPROC\fP) (Display *dpy, GLXDrawable drawable, int \fBbuffer\fP)"
.br
.ti -1c
.RI "typedef unsigned int(* \fBPFNGLXGETAGPOFFSETMESAPROC\fP) (const \fBvoid\fP *\fBpointer\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXCOPYSUBBUFFERMESAPROC\fP) (Display *dpy, GLXDrawable drawable, int \fBx\fP, int \fBy\fP, int \fBwidth\fP, int \fBheight\fP)"
.br
.ti -1c
.RI "typedef GLXPixmap(* \fBPFNGLXCREATEGLXPIXMAPMESAPROC\fP) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC\fP) (int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef const char *(* \fBPFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC\fP) (int attribute)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYRENDERERINTEGERMESAPROC\fP) (Display *dpy, int screen, int renderer, int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef const char *(* \fBPFNGLXQUERYRENDERERSTRINGMESAPROC\fP) (Display *dpy, int screen, int renderer, int attribute)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXRELEASEBUFFERSMESAPROC\fP) (Display *dpy, GLXDrawable drawable)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXSET3DFXMODEMESAPROC\fP) (int \fBmode\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXCOPYBUFFERSUBDATANVPROC\fP) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, \fBGLenum\fP readTarget, \fBGLenum\fP \fBwriteTarget\fP, \fBGLintptr\fP \fBreadOffset\fP, \fBGLintptr\fP \fBwriteOffset\fP, \fBGLsizeiptr\fP \fBsize\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXNAMEDCOPYBUFFERSUBDATANVPROC\fP) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, \fBGLuint\fP readBuffer, \fBGLuint\fP \fBwriteBuffer\fP, \fBGLintptr\fP \fBreadOffset\fP, \fBGLintptr\fP \fBwriteOffset\fP, \fBGLsizeiptr\fP \fBsize\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXCOPYIMAGESUBDATANVPROC\fP) (Display *dpy, GLXContext srcCtx, \fBGLuint\fP srcName, \fBGLenum\fP \fBsrcTarget\fP, \fBGLint\fP \fBsrcLevel\fP, \fBGLint\fP \fBsrcX\fP, \fBGLint\fP \fBsrcY\fP, \fBGLint\fP \fBsrcZ\fP, GLXContext dstCtx, \fBGLuint\fP \fBdstName\fP, \fBGLenum\fP \fBdstTarget\fP, \fBGLint\fP \fBdstLevel\fP, \fBGLint\fP \fBdstX\fP, \fBGLint\fP \fBdstY\fP, \fBGLint\fP \fBdstZ\fP, \fBGLsizei\fP \fBwidth\fP, \fBGLsizei\fP \fBheight\fP, \fBGLsizei\fP \fBdepth\fP)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXDELAYBEFORESWAPNVPROC\fP) (Display *dpy, GLXDrawable drawable, \fBGLfloat\fP seconds)"
.br
.ti -1c
.RI "typedef unsigned int *(* \fBPFNGLXENUMERATEVIDEODEVICESNVPROC\fP) (Display *dpy, int screen, int *nelements)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBINDVIDEODEVICENVPROC\fP) (Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXJOINSWAPGROUPNVPROC\fP) (Display *dpy, GLXDrawable drawable, \fBGLuint\fP group)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXBINDSWAPBARRIERNVPROC\fP) (Display *dpy, \fBGLuint\fP group, \fBGLuint\fP barrier)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYSWAPGROUPNVPROC\fP) (Display *dpy, GLXDrawable drawable, \fBGLuint\fP *group, \fBGLuint\fP *barrier)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYMAXSWAPGROUPSNVPROC\fP) (Display *dpy, int screen, \fBGLuint\fP *maxGroups, \fBGLuint\fP *maxBarriers)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYFRAMECOUNTNVPROC\fP) (Display *dpy, int screen, \fBGLuint\fP *\fBcount\fP)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXRESETFRAMECOUNTNVPROC\fP) (Display *dpy, int screen)"
.br
.ti -1c
.RI "typedef XID \fBGLXVideoCaptureDeviceNV\fP"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBINDVIDEOCAPTUREDEVICENVPROC\fP) (Display *dpy, unsigned int video_capture_slot, \fBGLXVideoCaptureDeviceNV\fP device)"
.br
.ti -1c
.RI "typedef \fBGLXVideoCaptureDeviceNV\fP *(* \fBPFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC\fP) (Display *dpy, int screen, int *nelements)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXLOCKVIDEOCAPTUREDEVICENVPROC\fP) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYVIDEOCAPTUREDEVICENVPROC\fP) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC\fP) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device)"
.br
.ti -1c
.RI "typedef unsigned int \fBGLXVideoDeviceNV\fP"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETVIDEODEVICENVPROC\fP) (Display *dpy, int screen, int numVideoDevices, \fBGLXVideoDeviceNV\fP *pVideoDevice)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXRELEASEVIDEODEVICENVPROC\fP) (Display *dpy, int screen, \fBGLXVideoDeviceNV\fP VideoDevice)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBINDVIDEOIMAGENVPROC\fP) (Display *dpy, \fBGLXVideoDeviceNV\fP VideoDevice, \fBGLXPbuffer\fP pbuf, int iVideoBuffer)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXRELEASEVIDEOIMAGENVPROC\fP) (Display *dpy, \fBGLXPbuffer\fP pbuf)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXSENDPBUFFERTOVIDEONVPROC\fP) (Display *dpy, \fBGLXPbuffer\fP pbuf, int iBufferType, unsigned long *pulCounterPbuffer, \fBGLboolean\fP bBlock)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETVIDEOINFONVPROC\fP) (Display *dpy, int screen, \fBGLXVideoDeviceNV\fP VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXGETSYNCVALUESOMLPROC\fP) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXGETMSCRATEOMLPROC\fP) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator)"
.br
.ti -1c
.RI "typedef int64_t(* \fBPFNGLXSWAPBUFFERSMSCOMLPROC\fP) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t \fBdivisor\fP, int64_t remainder)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXWAITFORMSCOMLPROC\fP) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t \fBdivisor\fP, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXWAITFORSBCOMLPROC\fP) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc)"
.br
.ti -1c
.RI "typedef XID \fBGLXPbufferSGIX\fP"
.br
.ti -1c
.RI "typedef struct __GLXFBConfigRec * \fBGLXFBConfigSGIX\fP"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETFBCONFIGATTRIBSGIXPROC\fP) (Display *dpy, \fBGLXFBConfigSGIX\fP config, int attribute, int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBGLXFBConfigSGIX\fP *(* \fBPFNGLXCHOOSEFBCONFIGSGIXPROC\fP) (Display *dpy, int screen, int *attrib_list, int *nelements)"
.br
.ti -1c
.RI "typedef GLXPixmap(* \fBPFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC\fP) (Display *dpy, \fBGLXFBConfigSGIX\fP config, Pixmap pixmap)"
.br
.ti -1c
.RI "typedef GLXContext(* \fBPFNGLXCREATECONTEXTWITHCONFIGSGIXPROC\fP) (Display *dpy, \fBGLXFBConfigSGIX\fP config, int render_type, GLXContext share_list, Bool direct)"
.br
.ti -1c
.RI "typedef XVisualInfo *(* \fBPFNGLXGETVISUALFROMFBCONFIGSGIXPROC\fP) (Display *dpy, \fBGLXFBConfigSGIX\fP config)"
.br
.ti -1c
.RI "typedef \fBGLXFBConfigSGIX\fP(* \fBPFNGLXGETFBCONFIGFROMVISUALSGIXPROC\fP) (Display *dpy, XVisualInfo *vis)"
.br
.ti -1c
.RI "typedef \fBGLXHyperpipeNetworkSGIX\fP *(* \fBPFNGLXQUERYHYPERPIPENETWORKSGIXPROC\fP) (Display *dpy, int *npipes)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXHYPERPIPECONFIGSGIXPROC\fP) (Display *dpy, int networkId, int npipes, \fBGLXHyperpipeConfigSGIX\fP *cfg, int *hpId)"
.br
.ti -1c
.RI "typedef \fBGLXHyperpipeConfigSGIX\fP *(* \fBPFNGLXQUERYHYPERPIPECONFIGSGIXPROC\fP) (Display *dpy, int hpId, int *npipes)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXDESTROYHYPERPIPECONFIGSGIXPROC\fP) (Display *dpy, int hpId)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBINDHYPERPIPESGIXPROC\fP) (Display *dpy, int hpId)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC\fP) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *attribList, \fBvoid\fP *returnAttribList)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXHYPERPIPEATTRIBSGIXPROC\fP) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *attribList)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYHYPERPIPEATTRIBSGIXPROC\fP) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *returnAttribList)"
.br
.ti -1c
.RI "typedef \fBGLXPbufferSGIX\fP(* \fBPFNGLXCREATEGLXPBUFFERSGIXPROC\fP) (Display *dpy, \fBGLXFBConfigSGIX\fP config, unsigned int \fBwidth\fP, unsigned int \fBheight\fP, int *attrib_list)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXDESTROYGLXPBUFFERSGIXPROC\fP) (Display *dpy, \fBGLXPbufferSGIX\fP pbuf)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYGLXPBUFFERSGIXPROC\fP) (Display *dpy, \fBGLXPbufferSGIX\fP pbuf, int attribute, unsigned int *\fBvalue\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXSELECTEVENTSGIXPROC\fP) (Display *dpy, GLXDrawable drawable, unsigned long \fBmask\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXGETSELECTEDEVENTSGIXPROC\fP) (Display *dpy, GLXDrawable drawable, unsigned long *\fBmask\fP)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXBINDSWAPBARRIERSGIXPROC\fP) (Display *dpy, GLXDrawable drawable, int barrier)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXQUERYMAXSWAPBARRIERSSGIXPROC\fP) (Display *dpy, int screen, int *max)"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXJOINSWAPGROUPSGIXPROC\fP) (Display *dpy, GLXDrawable drawable, GLXDrawable member)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXBINDCHANNELTOWINDOWSGIXPROC\fP) (Display *display, int screen, int channel, Window window)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXCHANNELRECTSGIXPROC\fP) (Display *display, int screen, int channel, int \fBx\fP, int \fBy\fP, int \fBw\fP, int \fBh\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYCHANNELRECTSGIXPROC\fP) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXQUERYCHANNELDELTASSGIXPROC\fP) (Display *display, int screen, int channel, int *\fBx\fP, int *\fBy\fP, int *\fBw\fP, int *\fBh\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXCHANNELRECTSYNCSGIXPROC\fP) (Display *display, int screen, int channel, \fBGLenum\fP synctype)"
.br
.ti -1c
.RI "typedef XID \fBGLXVideoSourceSGIX\fP"
.br
.ti -1c
.RI "typedef \fBvoid\fP(* \fBPFNGLXCUSHIONSGIPROC\fP) (Display *dpy, Window window, float cushion)"
.br
.ti -1c
.RI "typedef Bool(* \fBPFNGLXMAKECURRENTREADSGIPROC\fP) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
.br
.ti -1c
.RI "typedef GLXDrawable(* \fBPFNGLXGETCURRENTREADDRAWABLESGIPROC\fP) (\fBvoid\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXSWAPINTERVALSGIPROC\fP) (int interval)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXGETVIDEOSYNCSGIPROC\fP) (unsigned int *\fBcount\fP)"
.br
.ti -1c
.RI "typedef int(* \fBPFNGLXWAITVIDEOSYNCSGIPROC\fP) (int \fBdivisor\fP, int remainder, unsigned int *\fBcount\fP)"
.br
.ti -1c
.RI "typedef Status(* \fBPFNGLXGETTRANSPARENTINDEXSUNPROC\fP) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GLEXT_64_TYPES_DEFINED"

.SS "#define GLX_3DFX_FULLSCREEN_MODE_MESA   0x2"

.SS "#define GLX_3DFX_multisample   1"

.SS "#define GLX_3DFX_WINDOW_MODE_MESA   0x1"

.SS "#define GLX_ACCUM_BUFFER_BIT   0x00000080"

.SS "#define GLX_ACCUM_BUFFER_BIT_SGIX   0x00000080"

.SS "#define GLX_AMD_gpu_association   1"

.SS "#define GLX_ARB_context_flush_control   1"

.SS "#define GLX_ARB_create_context   1"

.SS "#define GLX_ARB_create_context_profile   1"

.SS "#define GLX_ARB_create_context_robustness   1"

.SS "#define GLX_ARB_fbconfig_float   1"

.SS "#define GLX_ARB_framebuffer_sRGB   1"

.SS "#define GLX_ARB_get_proc_address   1"

.SS "#define GLX_ARB_multisample   1"

.SS "#define GLX_ARB_robustness_application_isolation   1"

.SS "#define GLX_ARB_robustness_share_group_isolation   1"

.SS "#define GLX_ARB_vertex_buffer_object   1"

.SS "#define GLX_AUX0_EXT   0x20E2"

.SS "#define GLX_AUX1_EXT   0x20E3"

.SS "#define GLX_AUX2_EXT   0x20E4"

.SS "#define GLX_AUX3_EXT   0x20E5"

.SS "#define GLX_AUX4_EXT   0x20E6"

.SS "#define GLX_AUX5_EXT   0x20E7"

.SS "#define GLX_AUX6_EXT   0x20E8"

.SS "#define GLX_AUX7_EXT   0x20E9"

.SS "#define GLX_AUX8_EXT   0x20EA"

.SS "#define GLX_AUX9_EXT   0x20EB"

.SS "#define GLX_AUX_BUFFERS_BIT   0x00000010"

.SS "#define GLX_AUX_BUFFERS_BIT_SGIX   0x00000010"

.SS "#define GLX_BACK_BUFFER_AGE_EXT   0x20F4"

.SS "#define GLX_BACK_EXT   0x20E0"

.SS "#define GLX_BACK_LEFT_BUFFER_BIT   0x00000004"

.SS "#define GLX_BACK_LEFT_BUFFER_BIT_SGIX   0x00000004"

.SS "#define GLX_BACK_LEFT_EXT   0x20E0"

.SS "#define GLX_BACK_RIGHT_BUFFER_BIT   0x00000008"

.SS "#define GLX_BACK_RIGHT_BUFFER_BIT_SGIX   0x00000008"

.SS "#define GLX_BACK_RIGHT_EXT   0x20E1"

.SS "#define GLX_BAD_HYPERPIPE_CONFIG_SGIX   91"

.SS "#define GLX_BAD_HYPERPIPE_SGIX   92"

.SS "#define GLX_BIND_TO_MIPMAP_TEXTURE_EXT   0x20D2"

.SS "#define GLX_BIND_TO_TEXTURE_RGB_EXT   0x20D0"

.SS "#define GLX_BIND_TO_TEXTURE_RGBA_EXT   0x20D1"

.SS "#define GLX_BIND_TO_TEXTURE_TARGETS_EXT   0x20D3"

.SS "#define GLX_BLENDED_RGBA_SGIS   0x8025"

.SS "#define GLX_BUFFER_CLOBBER_MASK_SGIX   0x08000000"

.SS "#define GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK   0x04000000"

.SS "#define GLX_COLOR_INDEX_BIT   0x00000002"

.SS "#define GLX_COLOR_INDEX_BIT_SGIX   0x00000002"

.SS "#define GLX_COLOR_INDEX_TYPE   0x8015"

.SS "#define GLX_COLOR_INDEX_TYPE_SGIX   0x8015"

.SS "#define GLX_COLOR_SAMPLES_NV   0x20B3"

.SS "#define GLX_CONFIG_CAVEAT   0x20"

.SS "#define GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB   0x2095"

.SS "#define GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB   0x00000002"

.SS "#define GLX_CONTEXT_CORE_PROFILE_BIT_ARB   0x00000001"

.SS "#define GLX_CONTEXT_DEBUG_BIT_ARB   0x00000001"

.SS "#define GLX_CONTEXT_ES2_PROFILE_BIT_EXT   0x00000004"

.SS "#define GLX_CONTEXT_ES_PROFILE_BIT_EXT   0x00000004"

.SS "#define GLX_CONTEXT_FLAGS_ARB   0x2094"

.SS "#define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB   0x00000002"

.SS "#define GLX_CONTEXT_MAJOR_VERSION_ARB   0x2091"

.SS "#define GLX_CONTEXT_MINOR_VERSION_ARB   0x2092"

.SS "#define GLX_CONTEXT_PROFILE_MASK_ARB   0x9126"

.SS "#define GLX_CONTEXT_RELEASE_BEHAVIOR_ARB   0x2097"

.SS "#define GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB   0x2098"

.SS "#define GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB   0"

.SS "#define GLX_CONTEXT_RESET_ISOLATION_BIT_ARB   0x00000008"

.SS "#define GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB   0x8256"

.SS "#define GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB   0x00000004"

.SS "#define GLX_COPY_COMPLETE_INTEL   0x8181"

.SS "#define GLX_COVERAGE_SAMPLES_NV   100001"

.SS "#define GLX_DAMAGED   0x8020"

.SS "#define GLX_DAMAGED_SGIX   0x8020"

.SS "#define GLX_DEPTH_BUFFER_BIT   0x00000020"

.SS "#define GLX_DEPTH_BUFFER_BIT_SGIX   0x00000020"

.SS "#define GLX_DEVICE_ID_NV   0x20CD"

.SS "#define GLX_DIRECT_COLOR   0x8003"

.SS "#define GLX_DIRECT_COLOR_EXT   0x8003"

.SS "#define GLX_DONT_CARE   0xFFFFFFFF"

.SS "#define GLX_DRAWABLE_TYPE   0x8010"

.SS "#define GLX_DRAWABLE_TYPE_SGIX   0x8010"

.SS "#define GLX_EVENT_MASK   0x801F"

.SS "#define GLX_EVENT_MASK_SGIX   0x801F"

.SS "#define GLX_EXCHANGE_COMPLETE_INTEL   0x8180"

.SS "#define GLX_EXT_buffer_age   1"

.SS "#define GLX_EXT_create_context_es2_profile   1"

.SS "#define GLX_EXT_create_context_es_profile   1"

.SS "#define GLX_EXT_fbconfig_packed_float   1"

.SS "#define GLX_EXT_framebuffer_sRGB   1"

.SS "#define GLX_EXT_import_context   1"

.SS "#define GLX_EXT_stereo_tree   1"

.SS "#define GLX_EXT_swap_control   1"

.SS "#define GLX_EXT_swap_control_tear   1"

.SS "#define GLX_EXT_texture_from_pixmap   1"

.SS "#define GLX_EXT_visual_info   1"

.SS "#define GLX_EXT_visual_rating   1"

.SS "#define GLX_FBCONFIG_ID   0x8013"

.SS "#define GLX_FBCONFIG_ID_SGIX   0x8013"

.SS "#define GLX_FLIP_COMPLETE_INTEL   0x8182"

.SS "#define GLX_FLOAT_COMPONENTS_NV   0x20B0"

.SS "#define GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB   0x20B2"

.SS "#define GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT   0x20B2"

.SS "#define GLX_FRONT_EXT   0x20DE"

.SS "#define GLX_FRONT_LEFT_BUFFER_BIT   0x00000001"

.SS "#define GLX_FRONT_LEFT_BUFFER_BIT_SGIX   0x00000001"

.SS "#define GLX_FRONT_LEFT_EXT   0x20DE"

.SS "#define GLX_FRONT_RIGHT_BUFFER_BIT   0x00000002"

.SS "#define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX   0x00000002"

.SS "#define GLX_FRONT_RIGHT_EXT   0x20DF"

.SS "#define GLX_GLXEXT_VERSION   20140918"

.SS "#define GLX_GPU_CLOCK_AMD   0x21A4"

.SS "#define GLX_GPU_FASTEST_TARGET_GPUS_AMD   0x21A2"

.SS "#define GLX_GPU_NUM_PIPES_AMD   0x21A5"

.SS "#define GLX_GPU_NUM_RB_AMD   0x21A7"

.SS "#define GLX_GPU_NUM_SIMD_AMD   0x21A6"

.SS "#define GLX_GPU_NUM_SPI_AMD   0x21A8"

.SS "#define GLX_GPU_OPENGL_VERSION_STRING_AMD   0x1F02"

.SS "#define GLX_GPU_RAM_AMD   0x21A3"

.SS "#define GLX_GPU_RENDERER_STRING_AMD   0x1F01"

.SS "#define GLX_GPU_VENDOR_AMD   0x1F00"

.SS "#define GLX_GRAY_SCALE   0x8006"

.SS "#define GLX_GRAY_SCALE_EXT   0x8006"

.SS "#define GLX_HEIGHT   0x801E"

.SS "#define GLX_HEIGHT_SGIX   0x801E"

.SS "#define GLX_HYPERPIPE_DISPLAY_PIPE_SGIX   0x00000001"

.SS "#define GLX_HYPERPIPE_ID_SGIX   0x8030"

.SS "#define GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX   80"

.SS "#define GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX   0x00000004"

.SS "#define GLX_HYPERPIPE_RENDER_PIPE_SGIX   0x00000002"

.SS "#define GLX_HYPERPIPE_STEREO_SGIX   0x00000003"

.SS "#define GLX_INTEL_swap_event   1"

.SS "#define GLX_LARGEST_PBUFFER   0x801C"

.SS "#define GLX_LARGEST_PBUFFER_SGIX   0x801C"

.SS "#define GLX_LATE_SWAPS_TEAR_EXT   0x20F3"

.SS "#define GLX_LOSE_CONTEXT_ON_RESET_ARB   0x8252"

.SS "#define GLX_MAX_PBUFFER_HEIGHT   0x8017"

.SS "#define GLX_MAX_PBUFFER_HEIGHT_SGIX   0x8017"

.SS "#define GLX_MAX_PBUFFER_PIXELS   0x8018"

.SS "#define GLX_MAX_PBUFFER_PIXELS_SGIX   0x8018"

.SS "#define GLX_MAX_PBUFFER_WIDTH   0x8016"

.SS "#define GLX_MAX_PBUFFER_WIDTH_SGIX   0x8016"

.SS "#define GLX_MAX_SWAP_INTERVAL_EXT   0x20F2"

.SS "#define GLX_MESA_agp_offset   1"

.SS "#define GLX_MESA_copy_sub_buffer   1"

.SS "#define GLX_MESA_pixmap_colormap   1"

.SS "#define GLX_MESA_query_renderer   1"

.SS "#define GLX_MESA_release_buffers   1"

.SS "#define GLX_MESA_set_3dfx_mode   1"

.SS "#define GLX_MIPMAP_TEXTURE_EXT   0x20D7"

.SS "#define GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS   0x8027"

.SS "#define GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS   0x8026"

.SS "#define GLX_NO_RESET_NOTIFICATION_ARB   0x8261"

.SS "#define GLX_NON_CONFORMANT_CONFIG   0x800D"

.SS "#define GLX_NON_CONFORMANT_VISUAL_EXT   0x800D"

.SS "#define GLX_NONE   0x8000"

.SS "#define GLX_NONE_EXT   0x8000"

.SS "#define GLX_NUM_VIDEO_CAPTURE_SLOTS_NV   0x20CF"

.SS "#define GLX_NUM_VIDEO_SLOTS_NV   0x20F0"

.SS "#define GLX_NV_copy_buffer   1"

.SS "#define GLX_NV_copy_image   1"

.SS "#define GLX_NV_delay_before_swap   1"

.SS "#define GLX_NV_float_buffer   1"

.SS "#define GLX_NV_multisample_coverage   1"

.SS "#define GLX_NV_present_video   1"

.SS "#define GLX_NV_swap_group   1"

.SS "#define GLX_NV_video_capture   1"

.SS "#define GLX_NV_video_out   1"

.SS "#define GLX_OML_swap_method   1"

.SS "#define GLX_OML_sync_control   1"

.SS "#define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX   0x801A"

.SS "#define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX   0x8019"

.SS "#define GLX_PBUFFER   0x8023"

.SS "#define GLX_PBUFFER_BIT   0x00000004"

.SS "#define GLX_PBUFFER_BIT_SGIX   0x00000004"

.SS "#define GLX_PBUFFER_CLOBBER_MASK   0x08000000"

.SS "#define GLX_PBUFFER_HEIGHT   0x8040"

.SS "#define GLX_PBUFFER_SGIX   0x8023"

.SS "#define GLX_PBUFFER_WIDTH   0x8041"

.SS "#define GLX_PIPE_RECT_LIMITS_SGIX   0x00000002"

.SS "#define GLX_PIPE_RECT_SGIX   0x00000001"

.SS "#define GLX_PIXMAP_BIT   0x00000002"

.SS "#define GLX_PIXMAP_BIT_SGIX   0x00000002"

.SS "#define GLX_PRESERVED_CONTENTS   0x801B"

.SS "#define GLX_PRESERVED_CONTENTS_SGIX   0x801B"

.SS "#define GLX_PSEUDO_COLOR   0x8004"

.SS "#define GLX_PSEUDO_COLOR_EXT   0x8004"

.SS "#define GLX_RENDER_TYPE   0x8011"

.SS "#define GLX_RENDER_TYPE_SGIX   0x8011"

.SS "#define GLX_RENDERER_ACCELERATED_MESA   0x8186"

.SS "#define GLX_RENDERER_DEVICE_ID_MESA   0x8184"

.SS "#define GLX_RENDERER_ID_MESA   0x818E"

.SS "#define GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA   0x818B"

.SS "#define GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA   0x818A"

.SS "#define GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA   0x818D"

.SS "#define GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA   0x818C"

.SS "#define GLX_RENDERER_PREFERRED_PROFILE_MESA   0x8189"

.SS "#define GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA   0x8188"

.SS "#define GLX_RENDERER_VENDOR_ID_MESA   0x8183"

.SS "#define GLX_RENDERER_VERSION_MESA   0x8185"

.SS "#define GLX_RENDERER_VIDEO_MEMORY_MESA   0x8187"

.SS "#define GLX_RGBA_BIT   0x00000001"

.SS "#define GLX_RGBA_BIT_SGIX   0x00000001"

.SS "#define GLX_RGBA_FLOAT_BIT_ARB   0x00000004"

.SS "#define GLX_RGBA_FLOAT_TYPE_ARB   0x20B9"

.SS "#define GLX_RGBA_TYPE   0x8014"

.SS "#define GLX_RGBA_TYPE_SGIX   0x8014"

.SS "#define GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT   0x00000008"

.SS "#define GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT   0x20B1"

.SS "#define GLX_SAMPLE_BUFFERS   100000"

.SS "#define GLX_SAMPLE_BUFFERS_3DFX   0x8050"

.SS "#define GLX_SAMPLE_BUFFERS_ARB   100000"

.SS "#define GLX_SAMPLE_BUFFERS_BIT_SGIX   0x00000100"

.SS "#define GLX_SAMPLE_BUFFERS_SGIS   100000"

.SS "#define GLX_SAMPLES   100001"

.SS "#define GLX_SAMPLES_3DFX   0x8051"

.SS "#define GLX_SAMPLES_ARB   100001"

.SS "#define GLX_SAMPLES_SGIS   100001"

.SS "#define GLX_SAVED   0x8021"

.SS "#define GLX_SAVED_SGIX   0x8021"

.SS "#define GLX_SCREEN   0x800C"

.SS "#define GLX_SCREEN_EXT   0x800C"

.SS "#define GLX_SGI_cushion   1"

.SS "#define GLX_SGI_make_current_read   1"

.SS "#define GLX_SGI_swap_control   1"

.SS "#define GLX_SGI_video_sync   1"

.SS "#define GLX_SGIS_blended_overlay   1"

.SS "#define GLX_SGIS_multisample   1"

.SS "#define GLX_SGIS_shared_multisample   1"

.SS "#define GLX_SGIX_dmbuffer   1"

.SS "#define GLX_SGIX_fbconfig   1"

.SS "#define GLX_SGIX_hyperpipe   1"

.SS "#define GLX_SGIX_pbuffer   1"

.SS "#define GLX_SGIX_swap_barrier   1"

.SS "#define GLX_SGIX_swap_group   1"

.SS "#define GLX_SGIX_video_resize   1"

.SS "#define GLX_SGIX_video_source   1"

.SS "#define GLX_SGIX_visual_select_group   1"

.SS "#define GLX_SHARE_CONTEXT_EXT   0x800A"

.SS "#define GLX_SLOW_CONFIG   0x8001"

.SS "#define GLX_SLOW_VISUAL_EXT   0x8001"

.SS "#define GLX_STATIC_COLOR   0x8005"

.SS "#define GLX_STATIC_COLOR_EXT   0x8005"

.SS "#define GLX_STATIC_GRAY   0x8007"

.SS "#define GLX_STATIC_GRAY_EXT   0x8007"

.SS "#define GLX_STENCIL_BUFFER_BIT   0x00000040"

.SS "#define GLX_STENCIL_BUFFER_BIT_SGIX   0x00000040"

.SS "#define GLX_STEREO_NOTIFY_EXT   0x00000000"

.SS "#define GLX_STEREO_NOTIFY_MASK_EXT   0x00000001"

.SS "#define GLX_STEREO_TREE_EXT   0x20F5"

.SS "#define GLX_SUN_get_transparent_index   1"

.SS "#define GLX_SWAP_COPY_OML   0x8062"

.SS "#define GLX_SWAP_EXCHANGE_OML   0x8061"

.SS "#define GLX_SWAP_INTERVAL_EXT   0x20F1"

.SS "#define GLX_SWAP_METHOD_OML   0x8060"

.SS "#define GLX_SWAP_UNDEFINED_OML   0x8063"

.SS "#define GLX_SYNC_FRAME_SGIX   0x00000000"

.SS "#define GLX_SYNC_SWAP_SGIX   0x00000001"

.SS "#define GLX_TEXTURE_1D_BIT_EXT   0x00000001"

.SS "#define GLX_TEXTURE_1D_EXT   0x20DB"

.SS "#define GLX_TEXTURE_2D_BIT_EXT   0x00000002"

.SS "#define GLX_TEXTURE_2D_EXT   0x20DC"

.SS "#define GLX_TEXTURE_FORMAT_EXT   0x20D5"

.SS "#define GLX_TEXTURE_FORMAT_NONE_EXT   0x20D8"

.SS "#define GLX_TEXTURE_FORMAT_RGB_EXT   0x20D9"

.SS "#define GLX_TEXTURE_FORMAT_RGBA_EXT   0x20DA"

.SS "#define GLX_TEXTURE_RECTANGLE_BIT_EXT   0x00000004"

.SS "#define GLX_TEXTURE_RECTANGLE_EXT   0x20DD"

.SS "#define GLX_TEXTURE_TARGET_EXT   0x20D6"

.SS "#define GLX_TRANSPARENT_ALPHA_VALUE   0x28"

.SS "#define GLX_TRANSPARENT_ALPHA_VALUE_EXT   0x28"

.SS "#define GLX_TRANSPARENT_BLUE_VALUE   0x27"

.SS "#define GLX_TRANSPARENT_BLUE_VALUE_EXT   0x27"

.SS "#define GLX_TRANSPARENT_GREEN_VALUE   0x26"

.SS "#define GLX_TRANSPARENT_GREEN_VALUE_EXT   0x26"

.SS "#define GLX_TRANSPARENT_INDEX   0x8009"

.SS "#define GLX_TRANSPARENT_INDEX_EXT   0x8009"

.SS "#define GLX_TRANSPARENT_INDEX_VALUE   0x24"

.SS "#define GLX_TRANSPARENT_INDEX_VALUE_EXT   0x24"

.SS "#define GLX_TRANSPARENT_RED_VALUE   0x25"

.SS "#define GLX_TRANSPARENT_RED_VALUE_EXT   0x25"

.SS "#define GLX_TRANSPARENT_RGB   0x8008"

.SS "#define GLX_TRANSPARENT_RGB_EXT   0x8008"

.SS "#define GLX_TRANSPARENT_TYPE   0x23"

.SS "#define GLX_TRANSPARENT_TYPE_EXT   0x23"

.SS "#define GLX_TRUE_COLOR   0x8002"

.SS "#define GLX_TRUE_COLOR_EXT   0x8002"

.SS "#define GLX_UNIQUE_ID_NV   0x20CE"

.SS "#define GLX_VERSION_1_3   1"

.SS "#define GLX_VERSION_1_4   1"

.SS "#define GLX_VIDEO_OUT_ALPHA_NV   0x20C4"

.SS "#define GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV   0x20C6"

.SS "#define GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV   0x20C7"

.SS "#define GLX_VIDEO_OUT_COLOR_NV   0x20C3"

.SS "#define GLX_VIDEO_OUT_DEPTH_NV   0x20C5"

.SS "#define GLX_VIDEO_OUT_FIELD_1_NV   0x20C9"

.SS "#define GLX_VIDEO_OUT_FIELD_2_NV   0x20CA"

.SS "#define GLX_VIDEO_OUT_FRAME_NV   0x20C8"

.SS "#define GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV   0x20CB"

.SS "#define GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV   0x20CC"

.SS "#define GLX_VISUAL_CAVEAT_EXT   0x20"

.SS "#define GLX_VISUAL_ID   0x800B"

.SS "#define GLX_VISUAL_ID_EXT   0x800B"

.SS "#define GLX_VISUAL_SELECT_GROUP_SGIX   0x8028"

.SS "#define GLX_WIDTH   0x801D"

.SS "#define GLX_WIDTH_SGIX   0x801D"

.SS "#define GLX_WINDOW   0x8022"

.SS "#define GLX_WINDOW_BIT   0x00000001"

.SS "#define GLX_WINDOW_BIT_SGIX   0x00000001"

.SS "#define GLX_WINDOW_SGIX   0x8022"

.SS "#define GLX_X_RENDERABLE   0x8012"

.SS "#define GLX_X_RENDERABLE_SGIX   0x8012"

.SS "#define GLX_X_VISUAL_TYPE   0x22"

.SS "#define GLX_X_VISUAL_TYPE_EXT   0x22"

.SS "#define GLX_Y_INVERTED_EXT   0x20D4"

.SH "Typedef Documentation"
.PP 
.SS "typedef \fBvoid\fP( * __GLXextFuncPtr) (\fBvoid\fP)"

.SS "typedef XID \fBGLXContextID\fP"

.SS "typedef struct __GLXFBConfigRec* \fBGLXFBConfig\fP"

.SS "typedef struct __GLXFBConfigRec* \fBGLXFBConfigSGIX\fP"

.SS "typedef XID \fBGLXPbuffer\fP"

.SS "typedef XID \fBGLXPbufferSGIX\fP"

.SS "typedef XID \fBGLXVideoCaptureDeviceNV\fP"

.SS "typedef unsigned int \fBGLXVideoDeviceNV\fP"

.SS "typedef XID \fBGLXVideoSourceSGIX\fP"

.SS "typedef XID \fBGLXWindow\fP"

.SS "typedef int( * PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display *display, int screen, int channel, Window window)"

.SS "typedef int( * PFNGLXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId)"

.SS "typedef Bool( * PFNGLXBINDSWAPBARRIERNVPROC) (Display *dpy, \fBGLuint\fP group, \fBGLuint\fP barrier)"

.SS "typedef \fBvoid\fP( * PFNGLXBINDSWAPBARRIERSGIXPROC) (Display *dpy, GLXDrawable drawable, int barrier)"

.SS "typedef \fBvoid\fP( * PFNGLXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int \fBbuffer\fP, const int *attrib_list)"

.SS "typedef int( * PFNGLXBINDVIDEOCAPTUREDEVICENVPROC) (Display *dpy, unsigned int video_capture_slot, \fBGLXVideoCaptureDeviceNV\fP device)"

.SS "typedef int( * PFNGLXBINDVIDEODEVICENVPROC) (Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list)"

.SS "typedef int( * PFNGLXBINDVIDEOIMAGENVPROC) (Display *dpy, \fBGLXVideoDeviceNV\fP VideoDevice, \fBGLXPbuffer\fP pbuf, int iVideoBuffer)"

.SS "typedef \fBvoid\fP( * PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC) (GLXContext dstCtx, \fBGLint\fP \fBsrcX0\fP, \fBGLint\fP \fBsrcY0\fP, \fBGLint\fP \fBsrcX1\fP, \fBGLint\fP \fBsrcY1\fP, \fBGLint\fP \fBdstX0\fP, \fBGLint\fP \fBdstY0\fP, \fBGLint\fP \fBdstX1\fP, \fBGLint\fP \fBdstY1\fP, \fBGLbitfield\fP \fBmask\fP, \fBGLenum\fP \fBfilter\fP)"

.SS "typedef int( * PFNGLXCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int \fBx\fP, int \fBy\fP, int \fBw\fP, int \fBh\fP)"

.SS "typedef int( * PFNGLXCHANNELRECTSYNCSGIXPROC) (Display *display, int screen, int channel, \fBGLenum\fP synctype)"

.SS "typedef \fBGLXFBConfig\fP*( * PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements)"

.SS "typedef \fBGLXFBConfigSGIX\fP*( * PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display *dpy, int screen, int *attrib_list, int *nelements)"

.SS "typedef \fBvoid\fP( * PFNGLXCOPYBUFFERSUBDATANVPROC) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, \fBGLenum\fP readTarget, \fBGLenum\fP \fBwriteTarget\fP, \fBGLintptr\fP \fBreadOffset\fP, \fBGLintptr\fP \fBwriteOffset\fP, \fBGLsizeiptr\fP \fBsize\fP)"

.SS "typedef \fBvoid\fP( * PFNGLXCOPYIMAGESUBDATANVPROC) (Display *dpy, GLXContext srcCtx, \fBGLuint\fP srcName, \fBGLenum\fP \fBsrcTarget\fP, \fBGLint\fP \fBsrcLevel\fP, \fBGLint\fP \fBsrcX\fP, \fBGLint\fP \fBsrcY\fP, \fBGLint\fP \fBsrcZ\fP, GLXContext dstCtx, \fBGLuint\fP \fBdstName\fP, \fBGLenum\fP \fBdstTarget\fP, \fBGLint\fP \fBdstLevel\fP, \fBGLint\fP \fBdstX\fP, \fBGLint\fP \fBdstY\fP, \fBGLint\fP \fBdstZ\fP, \fBGLsizei\fP \fBwidth\fP, \fBGLsizei\fP \fBheight\fP, \fBGLsizei\fP \fBdepth\fP)"

.SS "typedef \fBvoid\fP( * PFNGLXCOPYSUBBUFFERMESAPROC) (Display *dpy, GLXDrawable drawable, int \fBx\fP, int \fBy\fP, int \fBwidth\fP, int \fBheight\fP)"

.SS "typedef GLXContext( * PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC) (unsigned int \fBid\fP, GLXContext share_list)"

.SS "typedef GLXContext( * PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (unsigned int \fBid\fP, GLXContext share_context, const int *attribList)"

.SS "typedef GLXContext( * PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display *dpy, \fBGLXFBConfig\fP config, GLXContext share_context, Bool direct, const int *attrib_list)"

.SS "typedef GLXContext( * PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display *dpy, \fBGLXFBConfigSGIX\fP config, int render_type, GLXContext share_list, Bool direct)"

.SS "typedef \fBGLXPbufferSGIX\fP( * PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, \fBGLXFBConfigSGIX\fP config, unsigned int \fBwidth\fP, unsigned int \fBheight\fP, int *attrib_list)"

.SS "typedef GLXPixmap( * PFNGLXCREATEGLXPIXMAPMESAPROC) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap)"

.SS "typedef GLXPixmap( * PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display *dpy, \fBGLXFBConfigSGIX\fP config, Pixmap pixmap)"

.SS "typedef GLXContext( * PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, \fBGLXFBConfig\fP config, int render_type, GLXContext share_list, Bool direct)"

.SS "typedef \fBGLXPbuffer\fP( * PFNGLXCREATEPBUFFERPROC) (Display *dpy, \fBGLXFBConfig\fP config, const int *attrib_list)"

.SS "typedef GLXPixmap( * PFNGLXCREATEPIXMAPPROC) (Display *dpy, \fBGLXFBConfig\fP config, Pixmap pixmap, const int *attrib_list)"

.SS "typedef \fBGLXWindow\fP( * PFNGLXCREATEWINDOWPROC) (Display *dpy, \fBGLXFBConfig\fP config, Window win, const int *attrib_list)"

.SS "typedef \fBvoid\fP( * PFNGLXCUSHIONSGIPROC) (Display *dpy, Window window, float cushion)"

.SS "typedef Bool( * PFNGLXDELAYBEFORESWAPNVPROC) (Display *dpy, GLXDrawable drawable, \fBGLfloat\fP seconds)"

.SS "typedef Bool( * PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC) (GLXContext ctx)"

.SS "typedef \fBvoid\fP( * PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, \fBGLXPbufferSGIX\fP pbuf)"

.SS "typedef int( * PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId)"

.SS "typedef \fBvoid\fP( * PFNGLXDESTROYPBUFFERPROC) (Display *dpy, \fBGLXPbuffer\fP pbuf)"

.SS "typedef \fBvoid\fP( * PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap)"

.SS "typedef \fBvoid\fP( * PFNGLXDESTROYWINDOWPROC) (Display *dpy, \fBGLXWindow\fP win)"

.SS "typedef \fBGLXVideoCaptureDeviceNV\fP*( * PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC) (Display *dpy, int screen, int *nelements)"

.SS "typedef unsigned int*( * PFNGLXENUMERATEVIDEODEVICESNVPROC) (Display *dpy, int screen, int *nelements)"

.SS "typedef \fBvoid\fP( * PFNGLXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context)"

.SS "typedef unsigned int( * PFNGLXGETAGPOFFSETMESAPROC) (const \fBvoid\fP *\fBpointer\fP)"

.SS "typedef unsigned int( * PFNGLXGETCONTEXTGPUIDAMDPROC) (GLXContext ctx)"

.SS "typedef \fBGLXContextID\fP( * PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context)"

.SS "typedef GLXContext( * PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC) (\fBvoid\fP)"

.SS "typedef Display*( * PFNGLXGETCURRENTDISPLAYEXTPROC) (\fBvoid\fP)"

.SS "typedef GLXDrawable( * PFNGLXGETCURRENTREADDRAWABLEPROC) (\fBvoid\fP)"

.SS "typedef GLXDrawable( * PFNGLXGETCURRENTREADDRAWABLESGIPROC) (\fBvoid\fP)"

.SS "typedef int( * PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, \fBGLXFBConfig\fP config, int attribute, int *\fBvalue\fP)"

.SS "typedef int( * PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display *dpy, \fBGLXFBConfigSGIX\fP config, int attribute, int *\fBvalue\fP)"

.SS "typedef \fBGLXFBConfigSGIX\fP( * PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display *dpy, XVisualInfo *vis)"

.SS "typedef \fBGLXFBConfig\fP*( * PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements)"

.SS "typedef unsigned int( * PFNGLXGETGPUIDSAMDPROC) (unsigned int \fBmaxCount\fP, unsigned int *\fBids\fP)"

.SS "typedef int( * PFNGLXGETGPUINFOAMDPROC) (unsigned int \fBid\fP, int property, \fBGLenum\fP dataType, unsigned int \fBsize\fP, \fBvoid\fP *\fBdata\fP)"

.SS "typedef Bool( * PFNGLXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator)"

.SS "typedef \fB__GLXextFuncPtr\fP( * PFNGLXGETPROCADDRESSARBPROC) (const \fBGLubyte\fP *procName)"

.SS "typedef \fB__GLXextFuncPtr\fP( * PFNGLXGETPROCADDRESSPROC) (const \fBGLubyte\fP *procName)"

.SS "typedef \fBvoid\fP( * PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask)"

.SS "typedef \fBvoid\fP( * PFNGLXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *\fBmask\fP)"

.SS "typedef Bool( * PFNGLXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc)"

.SS "typedef Status( * PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex)"

.SS "typedef int( * PFNGLXGETVIDEODEVICENVPROC) (Display *dpy, int screen, int numVideoDevices, \fBGLXVideoDeviceNV\fP *pVideoDevice)"

.SS "typedef int( * PFNGLXGETVIDEOINFONVPROC) (Display *dpy, int screen, \fBGLXVideoDeviceNV\fP VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo)"

.SS "typedef int( * PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int *\fBcount\fP)"

.SS "typedef XVisualInfo*( * PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, \fBGLXFBConfig\fP config)"

.SS "typedef XVisualInfo*( * PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display *dpy, \fBGLXFBConfigSGIX\fP config)"

.SS "typedef int( * PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *attribList)"

.SS "typedef int( * PFNGLXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, \fBGLXHyperpipeConfigSGIX\fP *cfg, int *hpId)"

.SS "typedef GLXContext( * PFNGLXIMPORTCONTEXTEXTPROC) (Display *dpy, \fBGLXContextID\fP contextID)"

.SS "typedef Bool( * PFNGLXJOINSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, \fBGLuint\fP group)"

.SS "typedef \fBvoid\fP( * PFNGLXJOINSWAPGROUPSGIXPROC) (Display *dpy, GLXDrawable drawable, GLXDrawable member)"

.SS "typedef \fBvoid\fP( * PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device)"

.SS "typedef Bool( * PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (GLXContext ctx)"

.SS "typedef Bool( * PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"

.SS "typedef Bool( * PFNGLXMAKECURRENTREADSGIPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"

.SS "typedef \fBvoid\fP( * PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, \fBGLuint\fP readBuffer, \fBGLuint\fP \fBwriteBuffer\fP, \fBGLintptr\fP \fBreadOffset\fP, \fBGLintptr\fP \fBwriteOffset\fP, \fBGLsizeiptr\fP \fBsize\fP)"

.SS "typedef int( * PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display *display, int screen, int channel, int *\fBx\fP, int *\fBy\fP, int *\fBw\fP, int *\fBh\fP)"

.SS "typedef int( * PFNGLXQUERYCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh)"

.SS "typedef int( * PFNGLXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *\fBvalue\fP)"

.SS "typedef int( * PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *\fBvalue\fP)"

.SS "typedef Bool( * PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC) (int attribute, unsigned int *\fBvalue\fP)"

.SS "typedef const char*( * PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC) (int attribute)"

.SS "typedef \fBvoid\fP( * PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *\fBvalue\fP)"

.SS "typedef Bool( * PFNGLXQUERYFRAMECOUNTNVPROC) (Display *dpy, int screen, \fBGLuint\fP *\fBcount\fP)"

.SS "typedef int( * PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, \fBGLXPbufferSGIX\fP pbuf, int attribute, unsigned int *\fBvalue\fP)"

.SS "typedef int( * PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *returnAttribList)"

.SS "typedef int( * PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int \fBsize\fP, \fBvoid\fP *attribList, \fBvoid\fP *returnAttribList)"

.SS "typedef \fBGLXHyperpipeConfigSGIX\fP*( * PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId, int *npipes)"

.SS "typedef \fBGLXHyperpipeNetworkSGIX\fP*( * PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *npipes)"

.SS "typedef Bool( * PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display *dpy, int screen, int *max)"

.SS "typedef Bool( * PFNGLXQUERYMAXSWAPGROUPSNVPROC) (Display *dpy, int screen, \fBGLuint\fP *maxGroups, \fBGLuint\fP *maxBarriers)"

.SS "typedef Bool( * PFNGLXQUERYRENDERERINTEGERMESAPROC) (Display *dpy, int screen, int renderer, int attribute, unsigned int *\fBvalue\fP)"

.SS "typedef const char*( * PFNGLXQUERYRENDERERSTRINGMESAPROC) (Display *dpy, int screen, int renderer, int attribute)"

.SS "typedef Bool( * PFNGLXQUERYSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, \fBGLuint\fP *group, \fBGLuint\fP *barrier)"

.SS "typedef int( * PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device, int attribute, int *\fBvalue\fP)"

.SS "typedef Bool( * PFNGLXRELEASEBUFFERSMESAPROC) (Display *dpy, GLXDrawable drawable)"

.SS "typedef \fBvoid\fP( * PFNGLXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int \fBbuffer\fP)"

.SS "typedef \fBvoid\fP( * PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC) (Display *dpy, \fBGLXVideoCaptureDeviceNV\fP device)"

.SS "typedef int( * PFNGLXRELEASEVIDEODEVICENVPROC) (Display *dpy, int screen, \fBGLXVideoDeviceNV\fP VideoDevice)"

.SS "typedef int( * PFNGLXRELEASEVIDEOIMAGENVPROC) (Display *dpy, \fBGLXPbuffer\fP pbuf)"

.SS "typedef Bool( * PFNGLXRESETFRAMECOUNTNVPROC) (Display *dpy, int screen)"

.SS "typedef \fBvoid\fP( * PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask)"

.SS "typedef \fBvoid\fP( * PFNGLXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long \fBmask\fP)"

.SS "typedef int( * PFNGLXSENDPBUFFERTOVIDEONVPROC) (Display *dpy, \fBGLXPbuffer\fP pbuf, int iBufferType, unsigned long *pulCounterPbuffer, \fBGLboolean\fP bBlock)"

.SS "typedef Bool( * PFNGLXSET3DFXMODEMESAPROC) (int \fBmode\fP)"

.SS "typedef int64_t( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t \fBdivisor\fP, int64_t remainder)"

.SS "typedef \fBvoid\fP( * PFNGLXSWAPINTERVALEXTPROC) (Display *dpy, GLXDrawable drawable, int interval)"

.SS "typedef int( * PFNGLXSWAPINTERVALSGIPROC) (int interval)"

.SS "typedef Bool( * PFNGLXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t \fBdivisor\fP, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc)"

.SS "typedef Bool( * PFNGLXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc)"

.SS "typedef int( * PFNGLXWAITVIDEOSYNCSGIPROC) (int \fBdivisor\fP, int remainder, unsigned int *\fBcount\fP)"

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
