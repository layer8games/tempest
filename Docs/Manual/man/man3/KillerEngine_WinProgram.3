.TH "KillerEngine::WinProgram" 3 "Tue Jan 29 2019" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KillerEngine::WinProgram
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBEndRunning\fP (void)"
.br
.ti -1c
.RI "bool \fBGetRunning\fP (void)"
.br
.ti -1c
.RI "S32 \fBGetWidth\fP (void)"
.br
.ti -1c
.RI "S32 \fBGetHeight\fP (void)"
.br
.ti -1c
.RI "F32 \fBGetScreenRight\fP (void)"
.br
.ti -1c
.RI "F32 \fBGetScreenLeft\fP (void)"
.br
.ti -1c
.RI "F32 \fBGetScreenTop\fP (void)"
.br
.ti -1c
.RI "F32 \fBGetScreenBottom\fP (void)"
.br
.ti -1c
.RI "void \fBSetBackgroundColor\fP (const \fBColor\fP &c)"
.br
.ti -1c
.RI "void \fBInit\fP (S32 width, S32 height, string wndName, bool isFullScreen)"
.br
.RI "Sets up Windows Program\&. "
.ti -1c
.RI "void \fBProcessEvents\fP (void)"
.br
.ti -1c
.RI "void \fBBufferSwap\fP (void)"
.br
.ti -1c
.RI "void \fBDisplayFPS\fP (void)"
.br
.ti -1c
.RI "void \fBToggleWireFrame\fP (void)"
.br
.ti -1c
.RI "void \fBResetMouseCursor\fP (void)"
.br
.ti -1c
.RI "void \fBEnableMouseCursor\fP (void)"
.br
.ti -1c
.RI "void \fBDisableMouseCursor\fP (void)"
.br
.ti -1c
.RI "void \fBHideMouseCursor\fP (void)"
.br
.ti -1c
.RI "const \fBKM::Vector\fP \fBGetMousePos\fP (void)"
.br
.ti -1c
.RI "const \fBKM::Vector\fP \fBGetMousePosInScreen\fP (void)"
.br
.ti -1c
.RI "F64 \fBGetTime\fP (void)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static shared_ptr< \fBWinProgram\fP > \fBInstance\fP (void)"
.br
.ti -1c
.RI "static Keys \fBConvertKeyCodes\fP (int key)"
.br
.ti -1c
.RI "static void \fBOnKey\fP (GLFWwindow *window, int key, int scancode, int action, int mode)"
.br
.ti -1c
.RI "static void \fBOnResize\fP (GLFWwindow *window, int width, int height)"
.br
.ti -1c
.RI "static void \fBOnMouseClick\fP (GLFWwindow *window, int button, int action, int mods)"
.br
.ti -1c
.RI "static void \fBOnMouseMove\fP (GLFWwindow *window, F64 posX, F64 posY)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fB_isFullScreen\fP"
.br
.ti -1c
.RI "bool \fB_running\fP"
.br
.ti -1c
.RI "bool \fB_wireFrame\fP"
.br
.ti -1c
.RI "F32 \fB_right\fP"
.br
.ti -1c
.RI "F32 \fB_left\fP"
.br
.ti -1c
.RI "F32 \fB_top\fP"
.br
.ti -1c
.RI "F32 \fB_bottom\fP"
.br
.ti -1c
.RI "string \fB_wndName\fP"
.br
.ti -1c
.RI "\fBColor\fP \fB_bgColor\fP"
.br
.ti -1c
.RI "GLFWwindow * \fB_window\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static shared_ptr< \fBWinProgram\fP > \fB_instance\fP = NULL"
.br
.ti -1c
.RI "static S32 \fB_totalWidth\fP = 0"
.br
.ti -1c
.RI "static S32 \fB_totalHeight\fP = 0"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "void WinProgram::Init (S32 width, S32 height, string wndName, bool isFullScreen)"

.PP
Sets up Windows Program\&. Makes all calls needed to start up a window\&. This is means to abstract away system specific callls 
.PP
\fBParameters:\fP
.RS 4
\fIwidth\fP S32: width of created window 
.br
\fIheight\fP S32: height of created window 
.br
\fIwndName\fP string: title of window 
.br
\fIisFullScreen\fP bool: Sets if the system makes the window fullscreen 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
