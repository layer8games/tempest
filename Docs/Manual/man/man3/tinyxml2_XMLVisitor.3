.TH "tinyxml2::XMLVisitor" 3 "Thu Aug 9 2018" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tinyxml2::XMLVisitor
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml2\&.h>\fP
.PP
Inherited by \fBtinyxml2::XMLPrinter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBXMLDocument\fP &)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBXMLDocument\fP &)"
.br
.RI "Visit a document\&. "
.ti -1c
.RI "virtual bool \fBVisitEnter\fP (const \fBXMLElement\fP &, const \fBXMLAttribute\fP *)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisitExit\fP (const \fBXMLElement\fP &)"
.br
.RI "Visit an element\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBXMLDeclaration\fP &)"
.br
.RI "Visit a declaration\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBXMLText\fP &)"
.br
.RI "Visit a text node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBXMLComment\fP &)"
.br
.RI "Visit a comment node\&. "
.ti -1c
.RI "virtual bool \fBVisit\fP (const \fBXMLUnknown\fP &)"
.br
.RI "Visit an unknown node\&. "
.in -1c
.SH "Detailed Description"
.PP 
Implements the interface to the 'Visitor pattern' (see the Accept() method\&.) If you call the Accept() method, it requires being passed a \fBXMLVisitor\fP class to handle callbacks\&. For nodes that contain other nodes (Document, Element) you will get called with a VisitEnter/VisitExit pair\&. Nodes that are always leafs are simply called with \fBVisit()\fP\&.
.PP
If you return 'true' from a Visit method, recursive parsing will continue\&. If you return false, \fBno children of this node or its siblings\fP will be visited\&.
.PP
All flavors of Visit methods have a default implementation that returns 'true' (continue visiting)\&. You need to only override methods that are interesting to you\&.
.PP
Generally Accept() is called on the \fBXMLDocument\fP, although all nodes support visiting\&.
.PP
You should never change the document from a callback\&.
.PP
\fBSee also:\fP
.RS 4
\fBXMLNode::Accept()\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
