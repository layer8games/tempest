.TH "Tempest::Engine" 3 "Mon Mar 2 2020" "Tempest" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tempest::Engine
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Engine\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "TEMPEST_API void \fBInit\fP (const \fBS32\fP width, const \fBS32\fP height, const string title, const bool fullscreen)"
.br
.ti -1c
.RI "bool \fBRunning\fP (void)"
.br
.ti -1c
.RI "void \fBEnd\fP (void)"
.br
.RI "Wrapper for LevelManager::SetRunning()\&. Sets Running to false\&. This stops the Main Game Loop from running\&. Calling this is the same as Quitting the program\&. "
.ti -1c
.RI "TEMPEST_API void \fBSetActiveLevel\fP (p_Level level)"
.br
.ti -1c
.RI "TEMPEST_API void \fBUpdate\fP (void)"
.br
.ti -1c
.RI "TEMPEST_API void \fBRender\fP (void)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static TEMPEST_API shared_ptr< \fBEngine\fP > \fBInstance\fP ()"
.br
.RI "Singleton function to get global instance of \fBEngine\fP\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBEngine\fP (void)"
.br
.RI "Default Constructor\&. It does not do anything\&. 
.br
 "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "p_Level \fB_activeLevel\fP"
.br
.RI "Currently Active updating and Rendering \fBLevel\fP\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static shared_ptr< \fBEngine\fP > \fB_instance\fP = NULL"
.br
.RI "Singleton global instance\&. "
.in -1c
.SH "Detailed Description"
.PP 
The KillerEngine class is designed to be the interface to starting up the \fBEngine\fP\&. This class will really just be a function and instance holder for other classes in the engine, but will actually do very little of its own\&. 
.br
 A lot of the functions that will be here will not be required to use in order to use the engine\&. They will be present as helper classes, not intended for required use\&. 
.br
 
.SH "Member Function Documentation"
.PP 
.SS "void Engine::Init (const \fBS32\fP width, const \fBS32\fP height, const string title, const bool fullscreen)"
Wrapper for \fBGameWindow::Init\fP\&. Sets up the Window and OpenGL 
.PP
\fBParameters\fP
.RS 4
\fIwidth\fP S32: describes width of window\&. 
.br
\fIheight\fP S32: describes height of the window\&. 
.br
\fItitle\fP string: sent to system to generate title of window\&. 
.br
\fIfullscreen\fP bool: tells system to use fullscreen or not\&. 
.br
 
.RE
.PP

.SS "void Engine::Render (void)"
Wrapper for steps needed to render\&. Calls the following in order
.IP "\(bu" 2
LevelManager::Render()
.IP "\(bu" 2
\fBGameWindow::BufferSwap()\fP
.IP "\(bu" 2
\fBErrorManager::DisplayErrors()\fP 
.br
 
.PP

.SS "void Engine::SetActiveLevel (p_Level level)"
Changes the currently updating and active level\&. Exit is called, then Enter is called\&. Must call v_Init before passing\&. 
.PP
\fBParameters\fP
.RS 4
\fIlevel\fP is the pointer to set active 
.RE
.PP

.SS "void Engine::Update (void)"
Wrapper for steps needed update steps\&. Calls the following in order\&.
.IP "\(bu" 2
GameWindow::ProcessWndEvents()
.IP "\(bu" 2
Timer::Update()
.IP "\(bu" 2
\fBController::Update()\fP
.IP "\(bu" 2
LevelManager::Update()
.IP "\(bu" 2
\fBErrorManager::DisplayErrors()\fP 
.br
 
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Tempest from the source code\&.
