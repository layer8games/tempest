.TH "Tempest::EventManager" 3 "Mon Mar 2 2020" "Tempest" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Tempest::EventManager
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <EventManager\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBListenerRegistration\fP"
.br
.RI "Helper struct to keep track of which GameObjects are interested in what types of Events\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "TEMPEST_API \fB~EventManager\fP (void)"
.br
.RI "No implementation\&. "
.ti -1c
.RI "TEMPEST_API void \fBAddEvent\fP (\fBEvent\fP event)"
.br
.ti -1c
.RI "TEMPEST_API void \fBAddListener\fP (p_GameObject obj, string type)"
.br
.ti -1c
.RI "TEMPEST_API void \fBDispatch\fP (void)"
.br
.ti -1c
.RI "TEMPEST_API void \fBDispatchNow\fP (\fBEvent\fP event)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static TEMPEST_API shared_ptr< \fBEventManager\fP > \fBInstance\fP (void)"
.br
.RI "Returns the singleton instance of the class\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "TEMPEST_API \fBEventManager\fP (void)"
.br
.RI "No major implemenation notes\&. "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::set< \fBEvent\fP, std::greater< \fBEvent\fP > > \fB_priorityQueue\fP"
.br
.RI "Set of Events acting as a queue\&. Set to decending order\&. "
.ti -1c
.RI "std::list< \fBListenerRegistration\fP > \fB_listeners\fP"
.br
.RI "List of registered listeners\&. "
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static shared_ptr< \fBEventManager\fP > \fB_instance\fP = nullptr"
.br
.RI "Singleton instance of \fBEventManager\fP\&. "
.in -1c
.SH "Detailed Description"
.PP 
A general \fBEvent\fP dispatcher and manager\&. An object will register its interests (defined as an event type), and when an event is added to the manager, if the \fBGameObject\fP has that type's interest, it will call \fBGameObject::v_OnEvent\fP, sending the found \fBEvent\fP along\&. This is true for sending an event at a future time (AddEvent) or sending an event now (DispatchNow)\&. This class is a singleton\&. 
.SH "Member Function Documentation"
.PP 
.SS "void EventManager::AddEvent (\fBEvent\fP event)"
Adds and \fBEvent\fP to the priority queue\&. If \fBEvent::DispatchTime\fP is set to 0, the \fBEvent\fP will be dispatched on the next Dispatch call\&. It's basically the same as calling DispatchNow, but with more steps\&. 
.PP
\fBParameters\fP
.RS 4
\fIevent\fP is dispatched at \fBEvent::DispatchTime\fP 
.RE
.PP

.SS "void EventManager::AddListener (p_GameObject obj, string type)"
Register a \fBGameObject\fP with an interest type\&. 
.PP
\fBParameters\fP
.RS 4
\fIobj\fP is registered 
.br
\fItype\fP is the interest of obj\&. 
.RE
.PP

.SS "void EventManager::Dispatch (void)"
Checks the priority queue for the next \fBEvent\fP to dispatch\&. If the dispatch time is equal to the Current Time (total time) then then we check for any registered listeners\&. If any listeners are found, they v_OnEvent is called and the event is sent\&. The \fBEvent\fP is then removed from the queue\&. 
.br
 
.SS "void EventManager::DispatchNow (\fBEvent\fP event)"
Checks if there are any listeners registered with ReceiverID\&. If one is found, the \fBEvent\fP is sent to them\&. 
.PP
\fBParameters\fP
.RS 4
\fIevent\fP is sent to the reciever\&. 
.br
 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Tempest from the source code\&.
