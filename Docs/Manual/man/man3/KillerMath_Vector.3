.TH "KillerMath::Vector" 3 "Thu Aug 9 2018" "Killer Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KillerMath::Vector
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVector\fP (F32 val)"
.br
.ti -1c
.RI "\fBVector\fP (F32 x, F32 y)"
.br
.ti -1c
.RI "\fBVector\fP (F32 x, F32 y, F32 z)"
.br
.ti -1c
.RI "\fBVector\fP (F32 x, F32 y, F32 z, F32 w)"
.br
.ti -1c
.RI "\fBVector\fP (const \fBVector\fP &v)"
.br
.ti -1c
.RI "void \fBMake2D\fP (void)"
.br
.ti -1c
.RI "void \fBMake3D\fP (void)"
.br
.ti -1c
.RI "bool \fBIs2D\fP (void) const"
.br
.ti -1c
.RI "const F32 * \fBGetElems\fP (void) const"
.br
.ti -1c
.RI "F32 \fBDotProduct\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "\fBVector\fP \fBCrossProduct\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "F32 \fBMagnitude\fP (void)"
.br
.ti -1c
.RI "F32 \fBSqrMagnitude\fP (void)"
.br
.ti -1c
.RI "void \fBNormalize\fP (void)"
.br
.ti -1c
.RI "void \fBReset\fP (F32 val=0\&.0f)"
.br
.ti -1c
.RI "void \fBAddScaledVector\fP (const \fBVector\fP &vec, F32 scale)"
.br
.ti -1c
.RI "F32 * \fBGetPointer\fP (void)"
.br
.ti -1c
.RI "void \fBSet\fP (F32 xVal, F32 yVal, F32 zVal)"
.br
.ti -1c
.RI "const F32 & \fBoperator[]\fP (int i) const"
.br
.ti -1c
.RI "F32 & \fBoperator[]\fP (int i)"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator=\fP (const \fBVector\fP &vec)"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator=\fP (F32 val)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator+\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator+=\fP (const \fBVector\fP &vec)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator+\fP (F32 val) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator+=\fP (F32 val)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator+\fP (shared_ptr< \fBVector\fP > vec) const"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator\-\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator\-=\fP (const \fBVector\fP &vec)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator\-\fP (F32 val) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator\-=\fP (F32 val)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator*\fP (const \fBVector\fP vec) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator*=\fP (const \fBVector\fP vec)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator*\fP (F32 val) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator*=\fP (F32 val)"
.br
.ti -1c
.RI "\fBVector\fP \fBoperator/\fP (F32 val) const"
.br
.ti -1c
.RI "\fBVector\fP & \fBoperator/=\fP (F32 val)"
.br
.ti -1c
.RI "bool \fBoperator>\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBVector\fP &vec) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBVector\fP &vec) const"
.br
.in -1c
.SS "Private Types"

.in +1c
.ti -1c
.RI "enum { \fBx\fP = 0, \fBy\fP = 1, \fBz\fP = 2, \fBw\fP = 3 }"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "bool \fB_2D\fP"
.br
.ti -1c
.RI "F32 \fB_data\fP [4]"
.br
.in -1c

.SH "Author"
.PP 
Generated automatically by Doxygen for Killer Engine from the source code\&.
